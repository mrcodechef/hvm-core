<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1142" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1125.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1125.00"> </text><svg id="frames" x="10" width="1180" total_samples="152"><g><title>[benches-ccf43307a469765e] (2 samples, 1.32%)</title><rect x="0.0000%" y="1061" width="1.3158%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1071.50"></text></g><g><title>hvmc::run::Net::call (2 samples, 1.32%)</title><rect x="0.0000%" y="1045" width="1.3158%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1055.50"></text></g><g><title>hvmc::jit::&lt;impl hvmc::run::Net&gt;::do_ctr (2 samples, 1.32%)</title><rect x="0.0000%" y="1029" width="1.3158%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1039.50"></text></g><g><title>hvmc::jit::&lt;impl hvmc::run::Net&gt;::free_trg (2 samples, 1.32%)</title><rect x="0.0000%" y="1013" width="1.3158%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1023.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.66%)</title><rect x="4.6053%" y="997" width="0.6579%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="1"/><text x="4.8553%" y="1007.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 4.61%)</title><rect x="1.3158%" y="1061" width="4.6053%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="7"/><text x="1.5658%" y="1071.50">[ld-l..</text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 1.32%)</title><rect x="4.6053%" y="1045" width="1.3158%" height="15" fill="rgb(207,160,47)" fg:x="7" fg:w="2"/><text x="4.8553%" y="1055.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 1.32%)</title><rect x="4.6053%" y="1029" width="1.3158%" height="15" fill="rgb(228,23,34)" fg:x="7" fg:w="2"/><text x="4.8553%" y="1039.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 1.32%)</title><rect x="4.6053%" y="1013" width="1.3158%" height="15" fill="rgb(218,30,26)" fg:x="7" fg:w="2"/><text x="4.8553%" y="1023.50"></text></g><g><title>__libc_early_init (1 samples, 0.66%)</title><rect x="5.2632%" y="997" width="0.6579%" height="15" fill="rgb(220,122,19)" fg:x="8" fg:w="1"/><text x="5.5132%" y="1007.50"></text></g><g><title>__getrlimit (1 samples, 0.66%)</title><rect x="5.2632%" y="981" width="0.6579%" height="15" fill="rgb(250,228,42)" fg:x="8" fg:w="1"/><text x="5.5132%" y="991.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::ignore_str (1 samples, 0.66%)</title><rect x="5.9211%" y="325" width="0.6579%" height="15" fill="rgb(240,193,28)" fg:x="9" fg:w="1"/><text x="6.1711%" y="335.50"></text></g><g><title>serde_json::de::from_slice (2 samples, 1.32%)</title><rect x="5.9211%" y="501" width="1.3158%" height="15" fill="rgb(216,20,37)" fg:x="9" fg:w="2"/><text x="6.1711%" y="511.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 1.32%)</title><rect x="5.9211%" y="485" width="1.3158%" height="15" fill="rgb(206,188,39)" fg:x="9" fg:w="2"/><text x="6.1711%" y="495.50"></text></g><g><title>criterion::cargo_target_directory::_::&lt;impl serde::de::Deserialize for criterion::cargo_target_directory::Metadata&gt;::deserialize (2 samples, 1.32%)</title><rect x="5.9211%" y="469" width="1.3158%" height="15" fill="rgb(217,207,13)" fg:x="9" fg:w="2"/><text x="6.1711%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 1.32%)</title><rect x="5.9211%" y="453" width="1.3158%" height="15" fill="rgb(231,73,38)" fg:x="9" fg:w="2"/><text x="6.1711%" y="463.50"></text></g><g><title>&lt;criterion::cargo_target_directory::_::&lt;impl serde::de::Deserialize for criterion::cargo_target_directory::Metadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 1.32%)</title><rect x="5.9211%" y="437" width="1.3158%" height="15" fill="rgb(225,20,46)" fg:x="9" fg:w="2"/><text x="6.1711%" y="447.50"></text></g><g><title>serde::de::MapAccess::next_value (2 samples, 1.32%)</title><rect x="5.9211%" y="421" width="1.3158%" height="15" fill="rgb(210,31,41)" fg:x="9" fg:w="2"/><text x="6.1711%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 1.32%)</title><rect x="5.9211%" y="405" width="1.3158%" height="15" fill="rgb(221,200,47)" fg:x="9" fg:w="2"/><text x="6.1711%" y="415.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 1.32%)</title><rect x="5.9211%" y="389" width="1.3158%" height="15" fill="rgb(226,26,5)" fg:x="9" fg:w="2"/><text x="6.1711%" y="399.50"></text></g><g><title>&lt;serde::de::ignored_any::IgnoredAny as serde::de::Deserialize&gt;::deserialize (2 samples, 1.32%)</title><rect x="5.9211%" y="373" width="1.3158%" height="15" fill="rgb(249,33,26)" fg:x="9" fg:w="2"/><text x="6.1711%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_ignored_any (2 samples, 1.32%)</title><rect x="5.9211%" y="357" width="1.3158%" height="15" fill="rgb(235,183,28)" fg:x="9" fg:w="2"/><text x="6.1711%" y="367.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::ignore_value (2 samples, 1.32%)</title><rect x="5.9211%" y="341" width="1.3158%" height="15" fill="rgb(221,5,38)" fg:x="9" fg:w="2"/><text x="6.1711%" y="351.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (1 samples, 0.66%)</title><rect x="6.5789%" y="325" width="0.6579%" height="15" fill="rgb(247,18,42)" fg:x="10" fg:w="1"/><text x="6.8289%" y="335.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (1 samples, 0.66%)</title><rect x="6.5789%" y="309" width="0.6579%" height="15" fill="rgb(241,131,45)" fg:x="10" fg:w="1"/><text x="6.8289%" y="319.50"></text></g><g><title>criterion::DEFAULT_OUTPUT_DIRECTORY::_{{closure}} (8 samples, 5.26%)</title><rect x="5.9211%" y="565" width="5.2632%" height="15" fill="rgb(249,31,29)" fg:x="9" fg:w="8"/><text x="6.1711%" y="575.50">criter..</text></g><g><title>criterion::cargo_target_directory (8 samples, 5.26%)</title><rect x="5.9211%" y="549" width="5.2632%" height="15" fill="rgb(225,111,53)" fg:x="9" fg:w="8"/><text x="6.1711%" y="559.50">criter..</text></g><g><title>core::option::Option&lt;T&gt;::or_else (8 samples, 5.26%)</title><rect x="5.9211%" y="533" width="5.2632%" height="15" fill="rgb(238,160,17)" fg:x="9" fg:w="8"/><text x="6.1711%" y="543.50">core::..</text></g><g><title>criterion::cargo_target_directory::_{{closure}} (8 samples, 5.26%)</title><rect x="5.9211%" y="517" width="5.2632%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="8"/><text x="6.1711%" y="527.50">criter..</text></g><g><title>std::process::Command::output (6 samples, 3.95%)</title><rect x="7.2368%" y="501" width="3.9474%" height="15" fill="rgb(232,36,49)" fg:x="11" fg:w="6"/><text x="7.4868%" y="511.50">std:..</text></g><g><title>std::sys::unix::process::process_inner::&lt;impl std::sys::unix::process::process_common::Command&gt;::output (5 samples, 3.29%)</title><rect x="7.8947%" y="485" width="3.2895%" height="15" fill="rgb(209,103,24)" fg:x="12" fg:w="5"/><text x="8.1447%" y="495.50">std..</text></g><g><title>std::sys_common::process::wait_with_output (5 samples, 3.29%)</title><rect x="7.8947%" y="469" width="3.2895%" height="15" fill="rgb(229,88,8)" fg:x="12" fg:w="5"/><text x="8.1447%" y="479.50">std..</text></g><g><title>std::sys::unix::pipe::read2 (5 samples, 3.29%)</title><rect x="7.8947%" y="453" width="3.2895%" height="15" fill="rgb(213,181,19)" fg:x="12" fg:w="5"/><text x="8.1447%" y="463.50">std..</text></g><g><title>std::sys::unix::cvt_r (5 samples, 3.29%)</title><rect x="7.8947%" y="437" width="3.2895%" height="15" fill="rgb(254,191,54)" fg:x="12" fg:w="5"/><text x="8.1447%" y="447.50">std..</text></g><g><title>std::sys::unix::pipe::read2::_{{closure}} (5 samples, 3.29%)</title><rect x="7.8947%" y="421" width="3.2895%" height="15" fill="rgb(241,83,37)" fg:x="12" fg:w="5"/><text x="8.1447%" y="431.50">std..</text></g><g><title>__poll (5 samples, 3.29%)</title><rect x="7.8947%" y="405" width="3.2895%" height="15" fill="rgb(233,36,39)" fg:x="12" fg:w="5"/><text x="8.1447%" y="415.50">__p..</text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 8.55%)</title><rect x="5.9211%" y="757" width="8.5526%" height="15" fill="rgb(226,3,54)" fg:x="9" fg:w="13"/><text x="6.1711%" y="767.50">&lt;once_cell::..</text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (13 samples, 8.55%)</title><rect x="5.9211%" y="741" width="8.5526%" height="15" fill="rgb(245,192,40)" fg:x="9" fg:w="13"/><text x="6.1711%" y="751.50">once_cell::s..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (13 samples, 8.55%)</title><rect x="5.9211%" y="725" width="8.5526%" height="15" fill="rgb(238,167,29)" fg:x="9" fg:w="13"/><text x="6.1711%" y="735.50">once_cell::s..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (13 samples, 8.55%)</title><rect x="5.9211%" y="709" width="8.5526%" height="15" fill="rgb(232,182,51)" fg:x="9" fg:w="13"/><text x="6.1711%" y="719.50">once_cell::s..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (13 samples, 8.55%)</title><rect x="5.9211%" y="693" width="8.5526%" height="15" fill="rgb(231,60,39)" fg:x="9" fg:w="13"/><text x="6.1711%" y="703.50">once_cell::i..</text></g><g><title>once_cell::imp::initialize_or_wait (13 samples, 8.55%)</title><rect x="5.9211%" y="677" width="8.5526%" height="15" fill="rgb(208,69,12)" fg:x="9" fg:w="13"/><text x="6.1711%" y="687.50">once_cell::i..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 8.55%)</title><rect x="5.9211%" y="661" width="8.5526%" height="15" fill="rgb(235,93,37)" fg:x="9" fg:w="13"/><text x="6.1711%" y="671.50">core::ops::f..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (13 samples, 8.55%)</title><rect x="5.9211%" y="645" width="8.5526%" height="15" fill="rgb(213,116,39)" fg:x="9" fg:w="13"/><text x="6.1711%" y="655.50">once_cell::i..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (13 samples, 8.55%)</title><rect x="5.9211%" y="629" width="8.5526%" height="15" fill="rgb(222,207,29)" fg:x="9" fg:w="13"/><text x="6.1711%" y="639.50">once_cell::s..</text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (13 samples, 8.55%)</title><rect x="5.9211%" y="613" width="8.5526%" height="15" fill="rgb(206,96,30)" fg:x="9" fg:w="13"/><text x="6.1711%" y="623.50">once_cell::s..</text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 8.55%)</title><rect x="5.9211%" y="597" width="8.5526%" height="15" fill="rgb(218,138,4)" fg:x="9" fg:w="13"/><text x="6.1711%" y="607.50">core::ops::f..</text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 8.55%)</title><rect x="5.9211%" y="581" width="8.5526%" height="15" fill="rgb(250,191,14)" fg:x="9" fg:w="13"/><text x="6.1711%" y="591.50">core::ops::f..</text></g><g><title>criterion::DEFAULT_PLOTTING_BACKEND::_{{closure}} (5 samples, 3.29%)</title><rect x="11.1842%" y="565" width="3.2895%" height="15" fill="rgb(239,60,40)" fg:x="17" fg:w="5"/><text x="11.4342%" y="575.50">cri..</text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 3.29%)</title><rect x="11.1842%" y="549" width="3.2895%" height="15" fill="rgb(206,27,48)" fg:x="17" fg:w="5"/><text x="11.4342%" y="559.50">&lt;on..</text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (5 samples, 3.29%)</title><rect x="11.1842%" y="533" width="3.2895%" height="15" fill="rgb(225,35,8)" fg:x="17" fg:w="5"/><text x="11.4342%" y="543.50">onc..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (5 samples, 3.29%)</title><rect x="11.1842%" y="517" width="3.2895%" height="15" fill="rgb(250,213,24)" fg:x="17" fg:w="5"/><text x="11.4342%" y="527.50">onc..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (5 samples, 3.29%)</title><rect x="11.1842%" y="501" width="3.2895%" height="15" fill="rgb(247,123,22)" fg:x="17" fg:w="5"/><text x="11.4342%" y="511.50">onc..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (5 samples, 3.29%)</title><rect x="11.1842%" y="485" width="3.2895%" height="15" fill="rgb(231,138,38)" fg:x="17" fg:w="5"/><text x="11.4342%" y="495.50">onc..</text></g><g><title>once_cell::imp::initialize_or_wait (5 samples, 3.29%)</title><rect x="11.1842%" y="469" width="3.2895%" height="15" fill="rgb(231,145,46)" fg:x="17" fg:w="5"/><text x="11.4342%" y="479.50">onc..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 3.29%)</title><rect x="11.1842%" y="453" width="3.2895%" height="15" fill="rgb(251,118,11)" fg:x="17" fg:w="5"/><text x="11.4342%" y="463.50">cor..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (5 samples, 3.29%)</title><rect x="11.1842%" y="437" width="3.2895%" height="15" fill="rgb(217,147,25)" fg:x="17" fg:w="5"/><text x="11.4342%" y="447.50">onc..</text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::_{{closure}} (5 samples, 3.29%)</title><rect x="11.1842%" y="421" width="3.2895%" height="15" fill="rgb(247,81,37)" fg:x="17" fg:w="5"/><text x="11.4342%" y="431.50">onc..</text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::_{{closure}} (5 samples, 3.29%)</title><rect x="11.1842%" y="405" width="3.2895%" height="15" fill="rgb(209,12,38)" fg:x="17" fg:w="5"/><text x="11.4342%" y="415.50">onc..</text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 3.29%)</title><rect x="11.1842%" y="389" width="3.2895%" height="15" fill="rgb(227,1,9)" fg:x="17" fg:w="5"/><text x="11.4342%" y="399.50">cor..</text></g><g><title>criterion_plot::version (5 samples, 3.29%)</title><rect x="11.1842%" y="373" width="3.2895%" height="15" fill="rgb(248,47,43)" fg:x="17" fg:w="5"/><text x="11.4342%" y="383.50">cri..</text></g><g><title>std::process::Command::output (5 samples, 3.29%)</title><rect x="11.1842%" y="357" width="3.2895%" height="15" fill="rgb(221,10,30)" fg:x="17" fg:w="5"/><text x="11.4342%" y="367.50">std..</text></g><g><title>std::sys::unix::process::process_inner::&lt;impl std::sys::unix::process::process_common::Command&gt;::output (5 samples, 3.29%)</title><rect x="11.1842%" y="341" width="3.2895%" height="15" fill="rgb(210,229,1)" fg:x="17" fg:w="5"/><text x="11.4342%" y="351.50">std..</text></g><g><title>std::sys::unix::process::process_inner::&lt;impl std::sys::unix::process::process_common::Command&gt;::spawn (5 samples, 3.29%)</title><rect x="11.1842%" y="325" width="3.2895%" height="15" fill="rgb(222,148,37)" fg:x="17" fg:w="5"/><text x="11.4342%" y="335.50">std..</text></g><g><title>posix_spawnp (5 samples, 3.29%)</title><rect x="11.1842%" y="309" width="3.2895%" height="15" fill="rgb(234,67,33)" fg:x="17" fg:w="5"/><text x="11.4342%" y="319.50">pos..</text></g><g><title>[libc.so.6] (5 samples, 3.29%)</title><rect x="11.1842%" y="293" width="3.2895%" height="15" fill="rgb(247,98,35)" fg:x="17" fg:w="5"/><text x="11.4342%" y="303.50">[li..</text></g><g><title>[libc.so.6] (5 samples, 3.29%)</title><rect x="11.1842%" y="277" width="3.2895%" height="15" fill="rgb(247,138,52)" fg:x="17" fg:w="5"/><text x="11.4342%" y="287.50">[li..</text></g><g><title>wait4 (5 samples, 3.29%)</title><rect x="11.1842%" y="261" width="3.2895%" height="15" fill="rgb(213,79,30)" fg:x="17" fg:w="5"/><text x="11.4342%" y="271.50">wai..</text></g><g><title>&lt;criterion::Criterion as core::default::Default&gt;::default (14 samples, 9.21%)</title><rect x="5.9211%" y="773" width="9.2105%" height="15" fill="rgb(246,177,23)" fg:x="9" fg:w="14"/><text x="6.1711%" y="783.50">&lt;criterion::C..</text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.66%)</title><rect x="14.4737%" y="757" width="0.6579%" height="15" fill="rgb(230,62,27)" fg:x="22" fg:w="1"/><text x="14.7237%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.66%)</title><rect x="14.4737%" y="741" width="0.6579%" height="15" fill="rgb(216,154,8)" fg:x="22" fg:w="1"/><text x="14.7237%" y="751.50"></text></g><g><title>criterion::html::Html::new (1 samples, 0.66%)</title><rect x="14.4737%" y="725" width="0.6579%" height="15" fill="rgb(244,35,45)" fg:x="22" fg:w="1"/><text x="14.7237%" y="735.50"></text></g><g><title>tinytemplate::TinyTemplate::add_template (1 samples, 0.66%)</title><rect x="14.4737%" y="709" width="0.6579%" height="15" fill="rgb(251,115,12)" fg:x="22" fg:w="1"/><text x="14.7237%" y="719.50"></text></g><g><title>tinytemplate::template::Template::compile (1 samples, 0.66%)</title><rect x="14.4737%" y="693" width="0.6579%" height="15" fill="rgb(240,54,50)" fg:x="22" fg:w="1"/><text x="14.7237%" y="703.50"></text></g><g><title>tinytemplate::compiler::TemplateCompiler::compile (1 samples, 0.66%)</title><rect x="14.4737%" y="677" width="0.6579%" height="15" fill="rgb(233,84,52)" fg:x="22" fg:w="1"/><text x="14.7237%" y="687.50"></text></g><g><title>tinytemplate::compiler::TemplateCompiler::consume_block (1 samples, 0.66%)</title><rect x="14.4737%" y="661" width="0.6579%" height="15" fill="rgb(207,117,47)" fg:x="22" fg:w="1"/><text x="14.7237%" y="671.50"></text></g><g><title>tinytemplate::compiler::TemplateCompiler::consume_tag (1 samples, 0.66%)</title><rect x="14.4737%" y="645" width="0.6579%" height="15" fill="rgb(249,43,39)" fg:x="22" fg:w="1"/><text x="14.7237%" y="655.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (1 samples, 0.66%)</title><rect x="14.4737%" y="629" width="0.6579%" height="15" fill="rgb(209,38,44)" fg:x="22" fg:w="1"/><text x="14.7237%" y="639.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.66%)</title><rect x="14.4737%" y="613" width="0.6579%" height="15" fill="rgb(236,212,23)" fg:x="22" fg:w="1"/><text x="14.7237%" y="623.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.66%)</title><rect x="14.4737%" y="597" width="0.6579%" height="15" fill="rgb(242,79,21)" fg:x="22" fg:w="1"/><text x="14.7237%" y="607.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.66%)</title><rect x="14.4737%" y="581" width="0.6579%" height="15" fill="rgb(211,96,35)" fg:x="22" fg:w="1"/><text x="14.7237%" y="591.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (1 samples, 0.66%)</title><rect x="14.4737%" y="565" width="0.6579%" height="15" fill="rgb(253,215,40)" fg:x="22" fg:w="1"/><text x="14.7237%" y="575.50"></text></g><g><title>hvmc::run::Net::new (1 samples, 0.66%)</title><rect x="15.1316%" y="389" width="0.6579%" height="15" fill="rgb(211,81,21)" fg:x="23" fg:w="1"/><text x="15.3816%" y="399.50"></text></g><g><title>hvmc::run::Net::new_with_root (1 samples, 0.66%)</title><rect x="15.1316%" y="373" width="0.6579%" height="15" fill="rgb(208,190,38)" fg:x="23" fg:w="1"/><text x="15.3816%" y="383.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.66%)</title><rect x="15.1316%" y="357" width="0.6579%" height="15" fill="rgb(235,213,38)" fg:x="23" fg:w="1"/><text x="15.3816%" y="367.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.66%)</title><rect x="15.1316%" y="341" width="0.6579%" height="15" fill="rgb(237,122,38)" fg:x="23" fg:w="1"/><text x="15.3816%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.66%)</title><rect x="15.1316%" y="325" width="0.6579%" height="15" fill="rgb(244,218,35)" fg:x="23" fg:w="1"/><text x="15.3816%" y="335.50"></text></g><g><title>core::ptr::write (1 samples, 0.66%)</title><rect x="15.1316%" y="309" width="0.6579%" height="15" fill="rgb(240,68,47)" fg:x="23" fg:w="1"/><text x="15.3816%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (2 samples, 1.32%)</title><rect x="15.7895%" y="357" width="1.3158%" height="15" fill="rgb(210,16,53)" fg:x="24" fg:w="2"/><text x="16.0395%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.66%)</title><rect x="16.4474%" y="341" width="0.6579%" height="15" fill="rgb(235,124,12)" fg:x="25" fg:w="1"/><text x="16.6974%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 2.63%)</title><rect x="27.6316%" y="325" width="2.6316%" height="15" fill="rgb(224,169,11)" fg:x="42" fg:w="4"/><text x="27.8816%" y="335.50">&lt;c..</text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.66%)</title><rect x="29.6053%" y="309" width="0.6579%" height="15" fill="rgb(250,166,2)" fg:x="45" fg:w="1"/><text x="29.8553%" y="319.50"></text></g><g><title>hvmc::run::Net::link_port_port (1 samples, 0.66%)</title><rect x="30.9211%" y="293" width="0.6579%" height="15" fill="rgb(242,216,29)" fg:x="47" fg:w="1"/><text x="31.1711%" y="303.50"></text></g><g><title>hvmc::run::Net::half_link_port_port (1 samples, 0.66%)</title><rect x="30.9211%" y="277" width="0.6579%" height="15" fill="rgb(230,116,27)" fg:x="47" fg:w="1"/><text x="31.1711%" y="287.50"></text></g><g><title>hvmc::run::Net::half_link_wire_port (1 samples, 0.66%)</title><rect x="31.5789%" y="277" width="0.6579%" height="15" fill="rgb(228,99,48)" fg:x="48" fg:w="1"/><text x="31.8289%" y="287.50"></text></g><g><title>hvmc::run::Wire::cas_target (1 samples, 0.66%)</title><rect x="31.5789%" y="261" width="0.6579%" height="15" fill="rgb(253,11,6)" fg:x="48" fg:w="1"/><text x="31.8289%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange_weak (1 samples, 0.66%)</title><rect x="31.5789%" y="245" width="0.6579%" height="15" fill="rgb(247,143,39)" fg:x="48" fg:w="1"/><text x="31.8289%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.66%)</title><rect x="31.5789%" y="229" width="0.6579%" height="15" fill="rgb(236,97,10)" fg:x="48" fg:w="1"/><text x="31.8289%" y="239.50"></text></g><g><title>hvmc::jit::&lt;impl hvmc::run::Net&gt;::link_trg_port (3 samples, 1.97%)</title><rect x="30.9211%" y="309" width="1.9737%" height="15" fill="rgb(233,208,19)" fg:x="47" fg:w="3"/><text x="31.1711%" y="319.50">h..</text></g><g><title>hvmc::run::Net::link_wire_port (2 samples, 1.32%)</title><rect x="31.5789%" y="293" width="1.3158%" height="15" fill="rgb(216,164,2)" fg:x="48" fg:w="2"/><text x="31.8289%" y="303.50"></text></g><g><title>hvmc::run::Wire::lock_target (1 samples, 0.66%)</title><rect x="32.2368%" y="277" width="0.6579%" height="15" fill="rgb(220,129,5)" fg:x="49" fg:w="1"/><text x="32.4868%" y="287.50"></text></g><g><title>hvmc::run::Wire::swap_target (1 samples, 0.66%)</title><rect x="32.2368%" y="261" width="0.6579%" height="15" fill="rgb(242,17,10)" fg:x="49" fg:w="1"/><text x="32.4868%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU64::swap (1 samples, 0.66%)</title><rect x="32.2368%" y="245" width="0.6579%" height="15" fill="rgb(242,107,0)" fg:x="49" fg:w="1"/><text x="32.4868%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.66%)</title><rect x="32.2368%" y="229" width="0.6579%" height="15" fill="rgb(251,28,31)" fg:x="49" fg:w="1"/><text x="32.4868%" y="239.50"></text></g><g><title>hvmc::jit::Trg::target (1 samples, 0.66%)</title><rect x="32.8947%" y="309" width="0.6579%" height="15" fill="rgb(233,223,10)" fg:x="50" fg:w="1"/><text x="33.1447%" y="319.50"></text></g><g><title>hvmc::run::Wire::load_target (1 samples, 0.66%)</title><rect x="32.8947%" y="293" width="0.6579%" height="15" fill="rgb(215,21,27)" fg:x="50" fg:w="1"/><text x="33.1447%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (1 samples, 0.66%)</title><rect x="32.8947%" y="277" width="0.6579%" height="15" fill="rgb(232,23,21)" fg:x="50" fg:w="1"/><text x="33.1447%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.66%)</title><rect x="32.8947%" y="261" width="0.6579%" height="15" fill="rgb(244,5,23)" fg:x="50" fg:w="1"/><text x="33.1447%" y="271.50"></text></g><g><title>hvmc::run::Net::create_node (1 samples, 0.66%)</title><rect x="33.5526%" y="309" width="0.6579%" height="15" fill="rgb(226,81,46)" fg:x="51" fg:w="1"/><text x="33.8026%" y="319.50"></text></g><g><title>hvmc::run::Net::alloc (1 samples, 0.66%)</title><rect x="33.5526%" y="293" width="0.6579%" height="15" fill="rgb(247,70,30)" fg:x="51" fg:w="1"/><text x="33.8026%" y="303.50"></text></g><g><title>hvmc::run::Loc::other_half (1 samples, 0.66%)</title><rect x="33.5526%" y="277" width="0.6579%" height="15" fill="rgb(212,68,19)" fg:x="51" fg:w="1"/><text x="33.8026%" y="287.50"></text></g><g><title>hvmc::run::Port::consume_node (2 samples, 1.32%)</title><rect x="34.2105%" y="309" width="1.3158%" height="15" fill="rgb(240,187,13)" fg:x="52" fg:w="2"/><text x="34.4605%" y="319.50"></text></g><g><title>hvmc::run::Port::traverse_node (2 samples, 1.32%)</title><rect x="34.2105%" y="293" width="1.3158%" height="15" fill="rgb(223,113,26)" fg:x="52" fg:w="2"/><text x="34.4605%" y="303.50"></text></g><g><title>hvmc::run::Loc::other_half (2 samples, 1.32%)</title><rect x="34.2105%" y="277" width="1.3158%" height="15" fill="rgb(206,192,2)" fg:x="52" fg:w="2"/><text x="34.4605%" y="287.50"></text></g><g><title>hvmc::run::Port::is_ctr (2 samples, 1.32%)</title><rect x="35.5263%" y="309" width="1.3158%" height="15" fill="rgb(241,108,4)" fg:x="54" fg:w="2"/><text x="35.7763%" y="319.50"></text></g><g><title>hvmc::jit::&lt;impl hvmc::run::Net&gt;::do_ctr (11 samples, 7.24%)</title><rect x="30.2632%" y="325" width="7.2368%" height="15" fill="rgb(247,173,49)" fg:x="46" fg:w="11"/><text x="30.5132%" y="335.50">hvmc::jit:..</text></g><g><title>hvmc::run::Port::tag (1 samples, 0.66%)</title><rect x="36.8421%" y="309" width="0.6579%" height="15" fill="rgb(224,114,35)" fg:x="56" fg:w="1"/><text x="37.0921%" y="319.50"></text></g><g><title>hvmc::run::Net::link_wire_port (5 samples, 3.29%)</title><rect x="37.5000%" y="309" width="3.2895%" height="15" fill="rgb(245,159,27)" fg:x="57" fg:w="5"/><text x="37.7500%" y="319.50">hvm..</text></g><g><title>hvmc::run::Wire::lock_target (5 samples, 3.29%)</title><rect x="37.5000%" y="293" width="3.2895%" height="15" fill="rgb(245,172,44)" fg:x="57" fg:w="5"/><text x="37.7500%" y="303.50">hvm..</text></g><g><title>hvmc::run::Wire::swap_target (5 samples, 3.29%)</title><rect x="37.5000%" y="277" width="3.2895%" height="15" fill="rgb(236,23,11)" fg:x="57" fg:w="5"/><text x="37.7500%" y="287.50">hvm..</text></g><g><title>core::sync::atomic::AtomicU64::swap (5 samples, 3.29%)</title><rect x="37.5000%" y="261" width="3.2895%" height="15" fill="rgb(205,117,38)" fg:x="57" fg:w="5"/><text x="37.7500%" y="271.50">cor..</text></g><g><title>core::sync::atomic::atomic_swap (5 samples, 3.29%)</title><rect x="37.5000%" y="245" width="3.2895%" height="15" fill="rgb(237,72,25)" fg:x="57" fg:w="5"/><text x="37.7500%" y="255.50">cor..</text></g><g><title>hvmc::run::Net::half_free (3 samples, 1.97%)</title><rect x="40.7895%" y="277" width="1.9737%" height="15" fill="rgb(244,70,9)" fg:x="62" fg:w="3"/><text x="41.0395%" y="287.50">h..</text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (3 samples, 1.97%)</title><rect x="40.7895%" y="261" width="1.9737%" height="15" fill="rgb(217,125,39)" fg:x="62" fg:w="3"/><text x="41.0395%" y="271.50">c..</text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 1.97%)</title><rect x="40.7895%" y="245" width="1.9737%" height="15" fill="rgb(235,36,10)" fg:x="62" fg:w="3"/><text x="41.0395%" y="255.50">c..</text></g><g><title>hvmc::run::Net::half_link_wire_port (4 samples, 2.63%)</title><rect x="40.7895%" y="293" width="2.6316%" height="15" fill="rgb(251,123,47)" fg:x="62" fg:w="4"/><text x="41.0395%" y="303.50">hv..</text></g><g><title>hvmc::run::Wire::cas_target (1 samples, 0.66%)</title><rect x="42.7632%" y="277" width="0.6579%" height="15" fill="rgb(221,13,13)" fg:x="65" fg:w="1"/><text x="43.0132%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange_weak (1 samples, 0.66%)</title><rect x="42.7632%" y="261" width="0.6579%" height="15" fill="rgb(238,131,9)" fg:x="65" fg:w="1"/><text x="43.0132%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.66%)</title><rect x="42.7632%" y="245" width="0.6579%" height="15" fill="rgb(211,50,8)" fg:x="65" fg:w="1"/><text x="43.0132%" y="255.50"></text></g><g><title>hvmc::jit::&lt;impl hvmc::run::Net&gt;::link_trg (15 samples, 9.87%)</title><rect x="37.5000%" y="325" width="9.8684%" height="15" fill="rgb(245,182,24)" fg:x="57" fg:w="15"/><text x="37.7500%" y="335.50">hvmc::jit::&lt;im..</text></g><g><title>hvmc::run::Net::link_wire_wire (10 samples, 6.58%)</title><rect x="40.7895%" y="309" width="6.5789%" height="15" fill="rgb(242,14,37)" fg:x="62" fg:w="10"/><text x="41.0395%" y="319.50">hvmc::run..</text></g><g><title>hvmc::run::Wire::lock_target (6 samples, 3.95%)</title><rect x="43.4211%" y="293" width="3.9474%" height="15" fill="rgb(246,228,12)" fg:x="66" fg:w="6"/><text x="43.6711%" y="303.50">hvmc..</text></g><g><title>hvmc::run::Wire::swap_target (6 samples, 3.95%)</title><rect x="43.4211%" y="277" width="3.9474%" height="15" fill="rgb(213,55,15)" fg:x="66" fg:w="6"/><text x="43.6711%" y="287.50">hvmc..</text></g><g><title>core::sync::atomic::AtomicU64::swap (6 samples, 3.95%)</title><rect x="43.4211%" y="261" width="3.9474%" height="15" fill="rgb(209,9,3)" fg:x="66" fg:w="6"/><text x="43.6711%" y="271.50">core..</text></g><g><title>core::sync::atomic::atomic_swap (6 samples, 3.95%)</title><rect x="43.4211%" y="245" width="3.9474%" height="15" fill="rgb(230,59,30)" fg:x="66" fg:w="6"/><text x="43.6711%" y="255.50">core..</text></g><g><title>hvmc::run::Net::link_port_port (1 samples, 0.66%)</title><rect x="47.3684%" y="309" width="0.6579%" height="15" fill="rgb(209,121,21)" fg:x="72" fg:w="1"/><text x="47.6184%" y="319.50"></text></g><g><title>hvmc::run::Net::half_link_port_port (1 samples, 0.66%)</title><rect x="47.3684%" y="293" width="0.6579%" height="15" fill="rgb(220,109,13)" fg:x="72" fg:w="1"/><text x="47.6184%" y="303.50"></text></g><g><title>hvmc::run::Port::wire (1 samples, 0.66%)</title><rect x="47.3684%" y="277" width="0.6579%" height="15" fill="rgb(232,18,1)" fg:x="72" fg:w="1"/><text x="47.6184%" y="287.50"></text></g><g><title>hvmc::run::Port::loc (1 samples, 0.66%)</title><rect x="47.3684%" y="261" width="0.6579%" height="15" fill="rgb(215,41,42)" fg:x="72" fg:w="1"/><text x="47.6184%" y="271.50"></text></g><g><title>hvmc::jit::&lt;impl hvmc::run::Net&gt;::link_trg_port (3 samples, 1.97%)</title><rect x="47.3684%" y="325" width="1.9737%" height="15" fill="rgb(224,123,36)" fg:x="72" fg:w="3"/><text x="47.6184%" y="335.50">h..</text></g><g><title>hvmc::run::Net::link_wire_port (2 samples, 1.32%)</title><rect x="48.0263%" y="309" width="1.3158%" height="15" fill="rgb(240,125,3)" fg:x="73" fg:w="2"/><text x="48.2763%" y="319.50"></text></g><g><title>hvmc::run::Wire::lock_target (2 samples, 1.32%)</title><rect x="48.0263%" y="293" width="1.3158%" height="15" fill="rgb(205,98,50)" fg:x="73" fg:w="2"/><text x="48.2763%" y="303.50"></text></g><g><title>hvmc::run::Wire::swap_target (2 samples, 1.32%)</title><rect x="48.0263%" y="277" width="1.3158%" height="15" fill="rgb(205,185,37)" fg:x="73" fg:w="2"/><text x="48.2763%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicU64::swap (2 samples, 1.32%)</title><rect x="48.0263%" y="261" width="1.3158%" height="15" fill="rgb(238,207,15)" fg:x="73" fg:w="2"/><text x="48.2763%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_swap (2 samples, 1.32%)</title><rect x="48.0263%" y="245" width="1.3158%" height="15" fill="rgb(213,199,42)" fg:x="73" fg:w="2"/><text x="48.2763%" y="255.50"></text></g><g><title>hvmc::run::Net::get_trg (8 samples, 5.26%)</title><rect x="49.3421%" y="325" width="5.2632%" height="15" fill="rgb(235,201,11)" fg:x="75" fg:w="8"/><text x="49.5921%" y="335.50">hvmc::..</text></g><g><title>&lt;hvmc::jit::Trg as core::clone::Clone&gt;::clone (8 samples, 5.26%)</title><rect x="49.3421%" y="309" width="5.2632%" height="15" fill="rgb(207,46,11)" fg:x="75" fg:w="8"/><text x="49.5921%" y="319.50">&lt;hvmc:..</text></g><g><title>&lt;hvmc::run::Wire as core::clone::Clone&gt;::clone (1 samples, 0.66%)</title><rect x="53.9474%" y="293" width="0.6579%" height="15" fill="rgb(241,35,35)" fg:x="82" fg:w="1"/><text x="54.1974%" y="303.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.66%)</title><rect x="53.9474%" y="277" width="0.6579%" height="15" fill="rgb(243,32,47)" fg:x="82" fg:w="1"/><text x="54.1974%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (2 samples, 1.32%)</title><rect x="54.6053%" y="309" width="1.3158%" height="15" fill="rgb(247,202,23)" fg:x="83" fg:w="2"/><text x="54.8553%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 1.32%)</title><rect x="54.6053%" y="293" width="1.3158%" height="15" fill="rgb(219,102,11)" fg:x="83" fg:w="2"/><text x="54.8553%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (1 samples, 0.66%)</title><rect x="55.9211%" y="309" width="0.6579%" height="15" fill="rgb(243,110,44)" fg:x="85" fg:w="1"/><text x="56.1711%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.66%)</title><rect x="55.9211%" y="293" width="0.6579%" height="15" fill="rgb(222,74,54)" fg:x="85" fg:w="1"/><text x="56.1711%" y="303.50"></text></g><g><title>hvmc::run::Net::half_free (4 samples, 2.63%)</title><rect x="54.6053%" y="325" width="2.6316%" height="15" fill="rgb(216,99,12)" fg:x="83" fg:w="4"/><text x="54.8553%" y="335.50">hv..</text></g><g><title>hvmc::run::Loc::other_half (1 samples, 0.66%)</title><rect x="56.5789%" y="309" width="0.6579%" height="15" fill="rgb(226,22,26)" fg:x="86" fg:w="1"/><text x="56.8289%" y="319.50"></text></g><g><title>hvmc::run::Net::call (59 samples, 38.82%)</title><rect x="19.0789%" y="341" width="38.8158%" height="15" fill="rgb(217,163,10)" fg:x="29" fg:w="59"/><text x="19.3289%" y="351.50">hvmc::run::Net::call</text></g><g><title>hvmc::run::Net::set_trg (1 samples, 0.66%)</title><rect x="57.2368%" y="325" width="0.6579%" height="15" fill="rgb(213,25,53)" fg:x="87" fg:w="1"/><text x="57.4868%" y="335.50"></text></g><g><title>hvmc::run::Net::comm02 (1 samples, 0.66%)</title><rect x="57.8947%" y="341" width="0.6579%" height="15" fill="rgb(252,105,26)" fg:x="88" fg:w="1"/><text x="58.1447%" y="351.50"></text></g><g><title>hvmc::run::Net::link_wire_port (1 samples, 0.66%)</title><rect x="57.8947%" y="325" width="0.6579%" height="15" fill="rgb(220,39,43)" fg:x="88" fg:w="1"/><text x="58.1447%" y="335.50"></text></g><g><title>hvmc::run::Wire::lock_target (1 samples, 0.66%)</title><rect x="57.8947%" y="309" width="0.6579%" height="15" fill="rgb(229,68,48)" fg:x="88" fg:w="1"/><text x="58.1447%" y="319.50"></text></g><g><title>hvmc::run::Wire::swap_target (1 samples, 0.66%)</title><rect x="57.8947%" y="293" width="0.6579%" height="15" fill="rgb(252,8,32)" fg:x="88" fg:w="1"/><text x="58.1447%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU64::swap (1 samples, 0.66%)</title><rect x="57.8947%" y="277" width="0.6579%" height="15" fill="rgb(223,20,43)" fg:x="88" fg:w="1"/><text x="58.1447%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.66%)</title><rect x="57.8947%" y="261" width="0.6579%" height="15" fill="rgb(229,81,49)" fg:x="88" fg:w="1"/><text x="58.1447%" y="271.50"></text></g><g><title>hvmc::run::Net::redux (1 samples, 0.66%)</title><rect x="58.5526%" y="309" width="0.6579%" height="15" fill="rgb(236,28,36)" fg:x="89" fg:w="1"/><text x="58.8026%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.66%)</title><rect x="58.5526%" y="293" width="0.6579%" height="15" fill="rgb(249,185,26)" fg:x="89" fg:w="1"/><text x="58.8026%" y="303.50"></text></g><g><title>hvmc::run::Net::comm22 (2 samples, 1.32%)</title><rect x="58.5526%" y="341" width="1.3158%" height="15" fill="rgb(249,174,33)" fg:x="89" fg:w="2"/><text x="58.8026%" y="351.50"></text></g><g><title>hvmc::run::Net::link_wire_port (2 samples, 1.32%)</title><rect x="58.5526%" y="325" width="1.3158%" height="15" fill="rgb(233,201,37)" fg:x="89" fg:w="2"/><text x="58.8026%" y="335.50"></text></g><g><title>hvmc::run::Wire::lock_target (1 samples, 0.66%)</title><rect x="59.2105%" y="309" width="0.6579%" height="15" fill="rgb(221,78,26)" fg:x="90" fg:w="1"/><text x="59.4605%" y="319.50"></text></g><g><title>hvmc::run::Wire::swap_target (1 samples, 0.66%)</title><rect x="59.2105%" y="293" width="0.6579%" height="15" fill="rgb(250,127,30)" fg:x="90" fg:w="1"/><text x="59.4605%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU64::swap (1 samples, 0.66%)</title><rect x="59.2105%" y="277" width="0.6579%" height="15" fill="rgb(230,49,44)" fg:x="90" fg:w="1"/><text x="59.4605%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.66%)</title><rect x="59.2105%" y="261" width="0.6579%" height="15" fill="rgb(229,67,23)" fg:x="90" fg:w="1"/><text x="59.4605%" y="271.50"></text></g><g><title>benches::benchmark_group (69 samples, 45.39%)</title><rect x="15.1316%" y="709" width="45.3947%" height="15" fill="rgb(249,83,47)" fg:x="23" fg:w="69"/><text x="15.3816%" y="719.50">benches::benchmark_group</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (69 samples, 45.39%)</title><rect x="15.1316%" y="693" width="45.3947%" height="15" fill="rgb(215,43,3)" fg:x="23" fg:w="69"/><text x="15.3816%" y="703.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench (69 samples, 45.39%)</title><rect x="15.1316%" y="677" width="45.3947%" height="15" fill="rgb(238,154,13)" fg:x="23" fg:w="69"/><text x="15.3816%" y="687.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::run_bench</text></g><g><title>criterion::routine::Routine::test (69 samples, 45.39%)</title><rect x="15.1316%" y="661" width="45.3947%" height="15" fill="rgb(219,56,2)" fg:x="23" fg:w="69"/><text x="15.3816%" y="671.50">criterion::routine::Routine::test</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench (69 samples, 45.39%)</title><rect x="15.1316%" y="645" width="45.3947%" height="15" fill="rgb(233,0,4)" fg:x="23" fg:w="69"/><text x="15.3816%" y="655.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;:..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (69 samples, 45.39%)</title><rect x="15.1316%" y="629" width="45.3947%" height="15" fill="rgb(235,30,7)" fg:x="23" fg:w="69"/><text x="15.3816%" y="639.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (69 samples, 45.39%)</title><rect x="15.1316%" y="613" width="45.3947%" height="15" fill="rgb(250,79,13)" fg:x="23" fg:w="69"/><text x="15.3816%" y="623.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (69 samples, 45.39%)</title><rect x="15.1316%" y="597" width="45.3947%" height="15" fill="rgb(211,146,34)" fg:x="23" fg:w="69"/><text x="15.3816%" y="607.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::fro..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (69 samples, 45.39%)</title><rect x="15.1316%" y="581" width="45.3947%" height="15" fill="rgb(228,22,38)" fg:x="23" fg:w="69"/><text x="15.3816%" y="591.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNest..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (69 samples, 45.39%)</title><rect x="15.1316%" y="565" width="45.3947%" height="15" fill="rgb(235,168,5)" fg:x="23" fg:w="69"/><text x="15.3816%" y="575.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_e..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (69 samples, 45.39%)</title><rect x="15.1316%" y="549" width="45.3947%" height="15" fill="rgb(221,155,16)" fg:x="23" fg:w="69"/><text x="15.3816%" y="559.50">alloc::vec::Vec&lt;T,A&gt;::extend_trusted</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (69 samples, 45.39%)</title><rect x="15.1316%" y="533" width="45.3947%" height="15" fill="rgb(215,215,53)" fg:x="23" fg:w="69"/><text x="15.3816%" y="543.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (69 samples, 45.39%)</title><rect x="15.1316%" y="517" width="45.3947%" height="15" fill="rgb(223,4,10)" fg:x="23" fg:w="69"/><text x="15.3816%" y="527.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iter..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (69 samples, 45.39%)</title><rect x="15.1316%" y="501" width="45.3947%" height="15" fill="rgb(234,103,6)" fg:x="23" fg:w="69"/><text x="15.3816%" y="511.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fo..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (69 samples, 45.39%)</title><rect x="15.1316%" y="485" width="45.3947%" height="15" fill="rgb(227,97,0)" fg:x="23" fg:w="69"/><text x="15.3816%" y="495.50">core::iter::adapters::map::map_fold::_{{closure}}</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::bench::_{{closure}} (69 samples, 45.39%)</title><rect x="15.1316%" y="469" width="45.3947%" height="15" fill="rgb(234,150,53)" fg:x="23" fg:w="69"/><text x="15.3816%" y="479.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;:..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}} (69 samples, 45.39%)</title><rect x="15.1316%" y="453" width="45.3947%" height="15" fill="rgb(228,201,54)" fg:x="23" fg:w="69"/><text x="15.3816%" y="463.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function::_{{closure}}</text></g><g><title>benches::benchmark_group::_{{closure}} (69 samples, 45.39%)</title><rect x="15.1316%" y="437" width="45.3947%" height="15" fill="rgb(222,22,37)" fg:x="23" fg:w="69"/><text x="15.3816%" y="447.50">benches::benchmark_group::_{{closure}}</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (69 samples, 45.39%)</title><rect x="15.1316%" y="421" width="45.3947%" height="15" fill="rgb(237,53,32)" fg:x="23" fg:w="69"/><text x="15.3816%" y="431.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>benches::benchmark_group::_{{closure}}::_{{closure}} (69 samples, 45.39%)</title><rect x="15.1316%" y="405" width="45.3947%" height="15" fill="rgb(233,25,53)" fg:x="23" fg:w="69"/><text x="15.3816%" y="415.50">benches::benchmark_group::_{{closure}}::_{{closure}}</text></g><g><title>hvmc::run::Net::normal (68 samples, 44.74%)</title><rect x="15.7895%" y="389" width="44.7368%" height="15" fill="rgb(210,40,34)" fg:x="24" fg:w="68"/><text x="16.0395%" y="399.50">hvmc::run::Net::normal</text></g><g><title>hvmc::run::Net::reduce (68 samples, 44.74%)</title><rect x="15.7895%" y="373" width="44.7368%" height="15" fill="rgb(241,220,44)" fg:x="24" fg:w="68"/><text x="16.0395%" y="383.50">hvmc::run::Net::reduce</text></g><g><title>hvmc::run::Net::interact (66 samples, 43.42%)</title><rect x="17.1053%" y="357" width="43.4211%" height="15" fill="rgb(235,28,35)" fg:x="26" fg:w="66"/><text x="17.3553%" y="367.50">hvmc::run::Net::interact</text></g><g><title>hvmc::run::Port::lab (1 samples, 0.66%)</title><rect x="59.8684%" y="341" width="0.6579%" height="15" fill="rgb(210,56,17)" fg:x="91" fg:w="1"/><text x="60.1184%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.66%)</title><rect x="60.5263%" y="581" width="0.6579%" height="15" fill="rgb(224,130,29)" fg:x="92" fg:w="1"/><text x="60.7763%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.66%)</title><rect x="60.5263%" y="565" width="0.6579%" height="15" fill="rgb(235,212,8)" fg:x="92" fg:w="1"/><text x="60.7763%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.66%)</title><rect x="60.5263%" y="549" width="0.6579%" height="15" fill="rgb(223,33,50)" fg:x="92" fg:w="1"/><text x="60.7763%" y="559.50"></text></g><g><title>hvml::compile_book (2 samples, 1.32%)</title><rect x="60.5263%" y="693" width="1.3158%" height="15" fill="rgb(219,149,13)" fg:x="92" fg:w="2"/><text x="60.7763%" y="703.50"></text></g><g><title>hvml::hvmc_net::pre_reduce::pre_reduce_book (2 samples, 1.32%)</title><rect x="60.5263%" y="677" width="1.3158%" height="15" fill="rgb(250,156,29)" fg:x="92" fg:w="2"/><text x="60.7763%" y="687.50"></text></g><g><title>hvmc::run::Net::new (2 samples, 1.32%)</title><rect x="60.5263%" y="661" width="1.3158%" height="15" fill="rgb(216,193,19)" fg:x="92" fg:w="2"/><text x="60.7763%" y="671.50"></text></g><g><title>hvmc::run::Net::new_with_root (2 samples, 1.32%)</title><rect x="60.5263%" y="645" width="1.3158%" height="15" fill="rgb(216,135,14)" fg:x="92" fg:w="2"/><text x="60.7763%" y="655.50"></text></g><g><title>alloc::vec::from_elem (2 samples, 1.32%)</title><rect x="60.5263%" y="629" width="1.3158%" height="15" fill="rgb(241,47,5)" fg:x="92" fg:w="2"/><text x="60.7763%" y="639.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2 samples, 1.32%)</title><rect x="60.5263%" y="613" width="1.3158%" height="15" fill="rgb(233,42,35)" fg:x="92" fg:w="2"/><text x="60.7763%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 1.32%)</title><rect x="60.5263%" y="597" width="1.3158%" height="15" fill="rgb(231,13,6)" fg:x="92" fg:w="2"/><text x="60.7763%" y="607.50"></text></g><g><title>core::ptr::write (1 samples, 0.66%)</title><rect x="61.1842%" y="581" width="0.6579%" height="15" fill="rgb(207,181,40)" fg:x="93" fg:w="1"/><text x="61.4342%" y="591.50"></text></g><g><title>benches-ccf4330 (95 samples, 62.50%)</title><rect x="0.0000%" y="1077" width="62.5000%" height="15" fill="rgb(254,173,49)" fg:x="0" fg:w="95"/><text x="0.2500%" y="1087.50">benches-ccf4330</text></g><g><title>_start (86 samples, 56.58%)</title><rect x="5.9211%" y="1061" width="56.5789%" height="15" fill="rgb(221,1,38)" fg:x="9" fg:w="86"/><text x="6.1711%" y="1071.50">_start</text></g><g><title>__libc_start_main (86 samples, 56.58%)</title><rect x="5.9211%" y="1045" width="56.5789%" height="15" fill="rgb(206,124,46)" fg:x="9" fg:w="86"/><text x="6.1711%" y="1055.50">__libc_start_main</text></g><g><title>[libc.so.6] (86 samples, 56.58%)</title><rect x="5.9211%" y="1029" width="56.5789%" height="15" fill="rgb(249,21,11)" fg:x="9" fg:w="86"/><text x="6.1711%" y="1039.50">[libc.so.6]</text></g><g><title>std::rt::lang_start (86 samples, 56.58%)</title><rect x="5.9211%" y="1013" width="56.5789%" height="15" fill="rgb(222,201,40)" fg:x="9" fg:w="86"/><text x="6.1711%" y="1023.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (86 samples, 56.58%)</title><rect x="5.9211%" y="997" width="56.5789%" height="15" fill="rgb(235,61,29)" fg:x="9" fg:w="86"/><text x="6.1711%" y="1007.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (86 samples, 56.58%)</title><rect x="5.9211%" y="981" width="56.5789%" height="15" fill="rgb(219,207,3)" fg:x="9" fg:w="86"/><text x="6.1711%" y="991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (86 samples, 56.58%)</title><rect x="5.9211%" y="965" width="56.5789%" height="15" fill="rgb(222,56,46)" fg:x="9" fg:w="86"/><text x="6.1711%" y="975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (86 samples, 56.58%)</title><rect x="5.9211%" y="949" width="56.5789%" height="15" fill="rgb(239,76,54)" fg:x="9" fg:w="86"/><text x="6.1711%" y="959.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (86 samples, 56.58%)</title><rect x="5.9211%" y="933" width="56.5789%" height="15" fill="rgb(231,124,27)" fg:x="9" fg:w="86"/><text x="6.1711%" y="943.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (86 samples, 56.58%)</title><rect x="5.9211%" y="917" width="56.5789%" height="15" fill="rgb(249,195,6)" fg:x="9" fg:w="86"/><text x="6.1711%" y="927.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (86 samples, 56.58%)</title><rect x="5.9211%" y="901" width="56.5789%" height="15" fill="rgb(237,174,47)" fg:x="9" fg:w="86"/><text x="6.1711%" y="911.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (86 samples, 56.58%)</title><rect x="5.9211%" y="885" width="56.5789%" height="15" fill="rgb(206,201,31)" fg:x="9" fg:w="86"/><text x="6.1711%" y="895.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (86 samples, 56.58%)</title><rect x="5.9211%" y="869" width="56.5789%" height="15" fill="rgb(231,57,52)" fg:x="9" fg:w="86"/><text x="6.1711%" y="879.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (86 samples, 56.58%)</title><rect x="5.9211%" y="853" width="56.5789%" height="15" fill="rgb(248,177,22)" fg:x="9" fg:w="86"/><text x="6.1711%" y="863.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (86 samples, 56.58%)</title><rect x="5.9211%" y="837" width="56.5789%" height="15" fill="rgb(215,211,37)" fg:x="9" fg:w="86"/><text x="6.1711%" y="847.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (86 samples, 56.58%)</title><rect x="5.9211%" y="821" width="56.5789%" height="15" fill="rgb(241,128,51)" fg:x="9" fg:w="86"/><text x="6.1711%" y="831.50">core::ops::function::FnOnce::call_once</text></g><g><title>benches::main (86 samples, 56.58%)</title><rect x="5.9211%" y="805" width="56.5789%" height="15" fill="rgb(227,165,31)" fg:x="9" fg:w="86"/><text x="6.1711%" y="815.50">benches::main</text></g><g><title>benches::benches (86 samples, 56.58%)</title><rect x="5.9211%" y="789" width="56.5789%" height="15" fill="rgb(228,167,24)" fg:x="9" fg:w="86"/><text x="6.1711%" y="799.50">benches::benches</text></g><g><title>benches::run_programs_dir (72 samples, 47.37%)</title><rect x="15.1316%" y="773" width="47.3684%" height="15" fill="rgb(228,143,12)" fg:x="23" fg:w="72"/><text x="15.3816%" y="783.50">benches::run_programs_dir</text></g><g><title>benches::run_dir (72 samples, 47.37%)</title><rect x="15.1316%" y="757" width="47.3684%" height="15" fill="rgb(249,149,8)" fg:x="23" fg:w="72"/><text x="15.3816%" y="767.50">benches::run_dir</text></g><g><title>benches::run_dir (72 samples, 47.37%)</title><rect x="15.1316%" y="741" width="47.3684%" height="15" fill="rgb(243,35,44)" fg:x="23" fg:w="72"/><text x="15.3816%" y="751.50">benches::run_dir</text></g><g><title>benches::run_file (72 samples, 47.37%)</title><rect x="15.1316%" y="725" width="47.3684%" height="15" fill="rgb(246,89,9)" fg:x="23" fg:w="72"/><text x="15.3816%" y="735.50">benches::run_file</text></g><g><title>benches::load_from_lang (3 samples, 1.97%)</title><rect x="60.5263%" y="709" width="1.9737%" height="15" fill="rgb(233,213,13)" fg:x="92" fg:w="3"/><text x="60.7763%" y="719.50">b..</text></g><g><title>hvml::term::parser::parser::parse_definition_book (1 samples, 0.66%)</title><rect x="61.8421%" y="693" width="0.6579%" height="15" fill="rgb(233,141,41)" fg:x="94" fg:w="1"/><text x="62.0921%" y="703.50"></text></g><g><title>chumsky::Parser::parse (1 samples, 0.66%)</title><rect x="61.8421%" y="677" width="0.6579%" height="15" fill="rgb(239,167,4)" fg:x="94" fg:w="1"/><text x="62.0921%" y="687.50"></text></g><g><title>chumsky::Parser::parse_with_state (1 samples, 0.66%)</title><rect x="61.8421%" y="661" width="0.6579%" height="15" fill="rgb(209,217,16)" fg:x="94" fg:w="1"/><text x="62.0921%" y="671.50"></text></g><g><title>&lt;chumsky::combinator::ThenIgnore&lt;A,B,OB,E&gt; as chumsky::private::ParserSealed&lt;I,OA,E&gt;&gt;::go (1 samples, 0.66%)</title><rect x="61.8421%" y="645" width="0.6579%" height="15" fill="rgb(219,88,35)" fg:x="94" fg:w="1"/><text x="62.0921%" y="655.50"></text></g><g><title>chumsky::blanket::&lt;impl chumsky::private::ParserSealed&lt;I,O,E&gt; for &amp;T&gt;::go (1 samples, 0.66%)</title><rect x="61.8421%" y="629" width="0.6579%" height="15" fill="rgb(220,193,23)" fg:x="94" fg:w="1"/><text x="62.0921%" y="639.50"></text></g><g><title>&lt;chumsky::private::Emit as chumsky::private::Mode&gt;::invoke (1 samples, 0.66%)</title><rect x="61.8421%" y="613" width="0.6579%" height="15" fill="rgb(230,90,52)" fg:x="94" fg:w="1"/><text x="62.0921%" y="623.50"></text></g><g><title>&lt;chumsky::combinator::TryMap&lt;A,OA,F&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go_emit (1 samples, 0.66%)</title><rect x="61.8421%" y="597" width="0.6579%" height="15" fill="rgb(252,106,19)" fg:x="94" fg:w="1"/><text x="62.0921%" y="607.50"></text></g><g><title>&lt;chumsky::combinator::TryMap&lt;A,OA,F&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go (1 samples, 0.66%)</title><rect x="61.8421%" y="581" width="0.6579%" height="15" fill="rgb(206,74,20)" fg:x="94" fg:w="1"/><text x="62.0921%" y="591.50"></text></g><g><title>&lt;chumsky::combinator::Collect&lt;A,O,C&gt; as chumsky::private::ParserSealed&lt;I,C,E&gt;&gt;::go (1 samples, 0.66%)</title><rect x="61.8421%" y="565" width="0.6579%" height="15" fill="rgb(230,138,44)" fg:x="94" fg:w="1"/><text x="62.0921%" y="575.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A,O,I,E&gt; as chumsky::private::IterParserSealed&lt;I,O,E&gt;&gt;::next (1 samples, 0.66%)</title><rect x="61.8421%" y="549" width="0.6579%" height="15" fill="rgb(235,182,43)" fg:x="94" fg:w="1"/><text x="62.0921%" y="559.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(Y_,Z_)&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go (1 samples, 0.66%)</title><rect x="61.8421%" y="533" width="0.6579%" height="15" fill="rgb(242,16,51)" fg:x="94" fg:w="1"/><text x="62.0921%" y="543.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,OA,F&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go (1 samples, 0.66%)</title><rect x="61.8421%" y="517" width="0.6579%" height="15" fill="rgb(248,9,4)" fg:x="94" fg:w="1"/><text x="62.0921%" y="527.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,OA,F&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go (1 samples, 0.66%)</title><rect x="61.8421%" y="501" width="0.6579%" height="15" fill="rgb(210,31,22)" fg:x="94" fg:w="1"/><text x="62.0921%" y="511.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B,OA,OB,E&gt; as chumsky::private::ParserSealed&lt;I,(OA,OB),E&gt;&gt;::go (1 samples, 0.66%)</title><rect x="61.8421%" y="485" width="0.6579%" height="15" fill="rgb(239,54,39)" fg:x="94" fg:w="1"/><text x="62.0921%" y="495.50"></text></g><g><title>&lt;chumsky::recursive::Recursive&lt;dyn chumsky::Parser&lt;I,O,E&gt;&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go (1 samples, 0.66%)</title><rect x="61.8421%" y="469" width="0.6579%" height="15" fill="rgb(230,99,41)" fg:x="94" fg:w="1"/><text x="62.0921%" y="479.50"></text></g><g><title>chumsky::recursive::recurse (1 samples, 0.66%)</title><rect x="61.8421%" y="453" width="0.6579%" height="15" fill="rgb(253,106,12)" fg:x="94" fg:w="1"/><text x="62.0921%" y="463.50"></text></g><g><title>stacker::maybe_grow (1 samples, 0.66%)</title><rect x="61.8421%" y="437" width="0.6579%" height="15" fill="rgb(213,46,41)" fg:x="94" fg:w="1"/><text x="62.0921%" y="447.50"></text></g><g><title>&lt;chumsky::recursive::Recursive&lt;dyn chumsky::Parser&lt;I,O,E&gt;&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go::_{{closure}} (1 samples, 0.66%)</title><rect x="61.8421%" y="421" width="0.6579%" height="15" fill="rgb(215,133,35)" fg:x="94" fg:w="1"/><text x="62.0921%" y="431.50"></text></g><g><title>&lt;chumsky::private::Emit as chumsky::private::Mode&gt;::invoke (1 samples, 0.66%)</title><rect x="61.8421%" y="405" width="0.6579%" height="15" fill="rgb(213,28,5)" fg:x="94" fg:w="1"/><text x="62.0921%" y="415.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(J_,K_,L_,M_,N_,O_,P_,Q_,R_,S_,T_,U_,V_,W_,X_,Y_,Z_)&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go_emit (1 samples, 0.66%)</title><rect x="61.8421%" y="389" width="0.6579%" height="15" fill="rgb(215,77,49)" fg:x="94" fg:w="1"/><text x="62.0921%" y="399.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(J_,K_,L_,M_,N_,O_,P_,Q_,R_,S_,T_,U_,V_,W_,X_,Y_,Z_)&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go (1 samples, 0.66%)</title><rect x="61.8421%" y="373" width="0.6579%" height="15" fill="rgb(248,100,22)" fg:x="94" fg:w="1"/><text x="62.0921%" y="383.50"></text></g><g><title>&lt;chumsky::Boxed&lt;I,O,E&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go (1 samples, 0.66%)</title><rect x="61.8421%" y="357" width="0.6579%" height="15" fill="rgb(208,67,9)" fg:x="94" fg:w="1"/><text x="62.0921%" y="367.50"></text></g><g><title>&lt;chumsky::private::Emit as chumsky::private::Mode&gt;::invoke (1 samples, 0.66%)</title><rect x="61.8421%" y="341" width="0.6579%" height="15" fill="rgb(219,133,21)" fg:x="94" fg:w="1"/><text x="62.0921%" y="351.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,OA,F&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go_emit (1 samples, 0.66%)</title><rect x="61.8421%" y="325" width="0.6579%" height="15" fill="rgb(246,46,29)" fg:x="94" fg:w="1"/><text x="62.0921%" y="335.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,OA,F&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go (1 samples, 0.66%)</title><rect x="61.8421%" y="309" width="0.6579%" height="15" fill="rgb(246,185,52)" fg:x="94" fg:w="1"/><text x="62.0921%" y="319.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B,OA,OB,E&gt; as chumsky::private::ParserSealed&lt;I,(OA,OB),E&gt;&gt;::go (1 samples, 0.66%)</title><rect x="61.8421%" y="293" width="0.6579%" height="15" fill="rgb(252,136,11)" fg:x="94" fg:w="1"/><text x="62.0921%" y="303.50"></text></g><g><title>&lt;chumsky::recursive::Recursive&lt;dyn chumsky::Parser&lt;I,O,E&gt;&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go (1 samples, 0.66%)</title><rect x="61.8421%" y="277" width="0.6579%" height="15" fill="rgb(219,138,53)" fg:x="94" fg:w="1"/><text x="62.0921%" y="287.50"></text></g><g><title>chumsky::recursive::recurse (1 samples, 0.66%)</title><rect x="61.8421%" y="261" width="0.6579%" height="15" fill="rgb(211,51,23)" fg:x="94" fg:w="1"/><text x="62.0921%" y="271.50"></text></g><g><title>stacker::maybe_grow (1 samples, 0.66%)</title><rect x="61.8421%" y="245" width="0.6579%" height="15" fill="rgb(247,221,28)" fg:x="94" fg:w="1"/><text x="62.0921%" y="255.50"></text></g><g><title>&lt;chumsky::recursive::Recursive&lt;dyn chumsky::Parser&lt;I,O,E&gt;&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go::_{{closure}} (1 samples, 0.66%)</title><rect x="61.8421%" y="229" width="0.6579%" height="15" fill="rgb(251,222,45)" fg:x="94" fg:w="1"/><text x="62.0921%" y="239.50"></text></g><g><title>&lt;chumsky::private::Emit as chumsky::private::Mode&gt;::invoke (1 samples, 0.66%)</title><rect x="61.8421%" y="213" width="0.6579%" height="15" fill="rgb(217,162,53)" fg:x="94" fg:w="1"/><text x="62.0921%" y="223.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(J_,K_,L_,M_,N_,O_,P_,Q_,R_,S_,T_,U_,V_,W_,X_,Y_,Z_)&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go_emit (1 samples, 0.66%)</title><rect x="61.8421%" y="197" width="0.6579%" height="15" fill="rgb(229,93,14)" fg:x="94" fg:w="1"/><text x="62.0921%" y="207.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(J_,K_,L_,M_,N_,O_,P_,Q_,R_,S_,T_,U_,V_,W_,X_,Y_,Z_)&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go (1 samples, 0.66%)</title><rect x="61.8421%" y="181" width="0.6579%" height="15" fill="rgb(209,67,49)" fg:x="94" fg:w="1"/><text x="62.0921%" y="191.50"></text></g><g><title>&lt;chumsky::Boxed&lt;I,O,E&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go (1 samples, 0.66%)</title><rect x="61.8421%" y="165" width="0.6579%" height="15" fill="rgb(213,87,29)" fg:x="94" fg:w="1"/><text x="62.0921%" y="175.50"></text></g><g><title>&lt;chumsky::private::Emit as chumsky::private::Mode&gt;::invoke (1 samples, 0.66%)</title><rect x="61.8421%" y="149" width="0.6579%" height="15" fill="rgb(205,151,52)" fg:x="94" fg:w="1"/><text x="62.0921%" y="159.50"></text></g><g><title>&lt;chumsky::primitive::Select&lt;F,I,O,E&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go_emit (1 samples, 0.66%)</title><rect x="61.8421%" y="133" width="0.6579%" height="15" fill="rgb(253,215,39)" fg:x="94" fg:w="1"/><text x="62.0921%" y="143.50"></text></g><g><title>&lt;chumsky::primitive::Select&lt;F,I,O,E&gt; as chumsky::private::ParserSealed&lt;I,O,E&gt;&gt;::go (1 samples, 0.66%)</title><rect x="61.8421%" y="117" width="0.6579%" height="15" fill="rgb(221,220,41)" fg:x="94" fg:w="1"/><text x="62.0921%" y="127.50"></text></g><g><title>chumsky::input::InputRef&lt;I,E&gt;::span_since (1 samples, 0.66%)</title><rect x="61.8421%" y="101" width="0.6579%" height="15" fill="rgb(218,133,21)" fg:x="94" fg:w="1"/><text x="62.0921%" y="111.50"></text></g><g><title>&lt;chumsky::input::SpannedInput&lt;T,S,I&gt; as chumsky::input::Input&gt;::span (1 samples, 0.66%)</title><rect x="61.8421%" y="85" width="0.6579%" height="15" fill="rgb(221,193,43)" fg:x="94" fg:w="1"/><text x="62.0921%" y="95.50"></text></g><g><title>&lt;chumsky::stream::Stream&lt;I&gt; as chumsky::input::Input&gt;::next_maybe (1 samples, 0.66%)</title><rect x="61.8421%" y="69" width="0.6579%" height="15" fill="rgb(240,128,52)" fg:x="94" fg:w="1"/><text x="62.0921%" y="79.50"></text></g><g><title>&lt;chumsky::stream::Stream&lt;I&gt; as chumsky::input::ValueInput&gt;::next (1 samples, 0.66%)</title><rect x="61.8421%" y="53" width="0.6579%" height="15" fill="rgb(253,114,12)" fg:x="94" fg:w="1"/><text x="62.0921%" y="63.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.66%)</title><rect x="61.8421%" y="37" width="0.6579%" height="15" fill="rgb(215,223,47)" fg:x="94" fg:w="1"/><text x="62.0921%" y="47.50"></text></g><g><title>_RINvNtCsfjSW78RKgj6_4core3ptr13drop_in_placeNtNtNtCs9HvKcI63rue_12clap_builder7builder12value_parser20PossibleValuesParserECs2l6RK3KDxwK_5cargo (1 samples, 0.66%)</title><rect x="62.5000%" y="1045" width="0.6579%" height="15" fill="rgb(248,225,23)" fg:x="95" fg:w="1"/><text x="62.7500%" y="1055.50"></text></g><g><title>[[heap]] (2 samples, 1.32%)</title><rect x="62.5000%" y="1061" width="1.3158%" height="15" fill="rgb(250,108,0)" fg:x="95" fg:w="2"/><text x="62.7500%" y="1071.50"></text></g><g><title>_RNvMNtNtNtCseEhEU3U7BfZ_5cargo4core8resolver9dep_cacheNtB2_15RegistryQueryer5query (1 samples, 0.66%)</title><rect x="63.1579%" y="1045" width="0.6579%" height="15" fill="rgb(228,208,7)" fg:x="96" fg:w="1"/><text x="63.4079%" y="1055.50"></text></g><g><title>_RINvNtCsfjSW78RKgj6_4core3ptr13drop_in_placeINtNtCsfC4zgGc0p15_3std6thread6PacketuEECsfs255iBgrWr_6ignore (1 samples, 0.66%)</title><rect x="63.8158%" y="1045" width="0.6579%" height="15" fill="rgb(244,45,10)" fg:x="97" fg:w="1"/><text x="64.0658%" y="1055.50"></text></g><g><title>[[stack]] (2 samples, 1.32%)</title><rect x="63.8158%" y="1061" width="1.3158%" height="15" fill="rgb(207,125,25)" fg:x="97" fg:w="2"/><text x="64.0658%" y="1071.50"></text></g><g><title>_RINvXsb_Cs5A4PmhQ8HUp_13serde_ignoredINtB6_11TrackedSeedINtNtCsfjSW78RKgj6_4core6marker11PhantomDataINtNtBX_6option6OptionNtNtNtNtCseEhEU3U7BfZ_5cargo4util4toml6schema12TomlProfilesEENCNvB20_22read_manifest_from_str0ENtNtCs93zYQH5Vhu0_5serde2de15DeserializeSeed11deserializeNtNtNtCsew3jru5kHPb_9toml_edit2de5value17ValueDeserializerEB24_ (1 samples, 0.66%)</title><rect x="64.4737%" y="1045" width="0.6579%" height="15" fill="rgb(210,195,18)" fg:x="98" fg:w="1"/><text x="64.7237%" y="1055.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.66%)</title><rect x="65.1316%" y="981" width="0.6579%" height="15" fill="rgb(249,80,12)" fg:x="99" fg:w="1"/><text x="65.3816%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.66%)</title><rect x="65.1316%" y="965" width="0.6579%" height="15" fill="rgb(221,65,9)" fg:x="99" fg:w="1"/><text x="65.3816%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.66%)</title><rect x="65.1316%" y="949" width="0.6579%" height="15" fill="rgb(235,49,36)" fg:x="99" fg:w="1"/><text x="65.3816%" y="959.50"></text></g><g><title>cfree (1 samples, 0.66%)</title><rect x="65.1316%" y="933" width="0.6579%" height="15" fill="rgb(225,32,20)" fg:x="99" fg:w="1"/><text x="65.3816%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="65.1316%" y="917" width="0.6579%" height="15" fill="rgb(215,141,46)" fg:x="99" fg:w="1"/><text x="65.3816%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="65.1316%" y="901" width="0.6579%" height="15" fill="rgb(250,160,47)" fg:x="99" fg:w="1"/><text x="65.3816%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="65.1316%" y="885" width="0.6579%" height="15" fill="rgb(216,222,40)" fg:x="99" fg:w="1"/><text x="65.3816%" y="895.50"></text></g><g><title>_RNvMs_NtCsfs255iBgrWr_6ignore3dirNtB4_6Ignore14add_child_path (1 samples, 0.66%)</title><rect x="65.7895%" y="933" width="0.6579%" height="15" fill="rgb(234,217,39)" fg:x="100" fg:w="1"/><text x="66.0395%" y="943.50"></text></g><g><title>[libc.so.6] (7 samples, 4.61%)</title><rect x="65.1316%" y="1061" width="4.6053%" height="15" fill="rgb(207,178,40)" fg:x="99" fg:w="7"/><text x="65.3816%" y="1071.50">[libc..</text></g><g><title>[libc.so.6] (7 samples, 4.61%)</title><rect x="65.1316%" y="1045" width="4.6053%" height="15" fill="rgb(221,136,13)" fg:x="99" fg:w="7"/><text x="65.3816%" y="1055.50">[libc..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (7 samples, 4.61%)</title><rect x="65.1316%" y="1029" width="4.6053%" height="15" fill="rgb(249,199,10)" fg:x="99" fg:w="7"/><text x="65.3816%" y="1039.50">std::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 4.61%)</title><rect x="65.1316%" y="1013" width="4.6053%" height="15" fill="rgb(249,222,13)" fg:x="99" fg:w="7"/><text x="65.3816%" y="1023.50">&lt;allo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 4.61%)</title><rect x="65.1316%" y="997" width="4.6053%" height="15" fill="rgb(244,185,38)" fg:x="99" fg:w="7"/><text x="65.3816%" y="1007.50">&lt;allo..</text></g><g><title>_RNSNvYNCINvMNtCsfC4zgGc0p15_3std6threadNtBa_7Builder16spawn_unchecked_NCNCNvMsc_NtCsfs255iBgrWr_6ignore4walkNtB1g_12WalkParallel5visit00uEs_0INtNtNtCsfjSW78RKgj6_4core3ops8function6FnOnceuE9call_once6vtableB1i_ (6 samples, 3.95%)</title><rect x="65.7895%" y="981" width="3.9474%" height="15" fill="rgb(236,202,9)" fg:x="100" fg:w="6"/><text x="66.0395%" y="991.50">_RNS..</text></g><g><title>_RINvNtNtCsfC4zgGc0p15_3std10sys_common9backtrace28___rust_begin_short_backtraceNCNCNvMsc_NtCsfs255iBgrWr_6ignore4walkNtB1p_12WalkParallel5visit00uEB1r_ (6 samples, 3.95%)</title><rect x="65.7895%" y="965" width="3.9474%" height="15" fill="rgb(250,229,37)" fg:x="100" fg:w="6"/><text x="66.0395%" y="975.50">_RIN..</text></g><g><title>_RNvMse_NtCsfs255iBgrWr_6ignore4walkNtB5_6Worker3run (6 samples, 3.95%)</title><rect x="65.7895%" y="949" width="3.9474%" height="15" fill="rgb(206,174,23)" fg:x="100" fg:w="6"/><text x="66.0395%" y="959.50">_RNv..</text></g><g><title>std::thread::sleep (5 samples, 3.29%)</title><rect x="66.4474%" y="933" width="3.2895%" height="15" fill="rgb(211,33,43)" fg:x="101" fg:w="5"/><text x="66.6974%" y="943.50">std..</text></g><g><title>std::sys::unix::thread::Thread::sleep (5 samples, 3.29%)</title><rect x="66.4474%" y="917" width="3.2895%" height="15" fill="rgb(245,58,50)" fg:x="101" fg:w="5"/><text x="66.6974%" y="927.50">std..</text></g><g><title>__nanosleep (5 samples, 3.29%)</title><rect x="66.4474%" y="901" width="3.2895%" height="15" fill="rgb(244,68,36)" fg:x="101" fg:w="5"/><text x="66.6974%" y="911.50">__n..</text></g><g><title>clock_nanosleep (5 samples, 3.29%)</title><rect x="66.4474%" y="885" width="3.2895%" height="15" fill="rgb(232,229,15)" fg:x="101" fg:w="5"/><text x="66.6974%" y="895.50">clo..</text></g><g><title>X509_CINF_seq_tt (1 samples, 0.66%)</title><rect x="69.7368%" y="1045" width="0.6579%" height="15" fill="rgb(254,30,23)" fg:x="106" fg:w="1"/><text x="69.9868%" y="1055.50"></text></g><g><title>x509_name_ex_d2i (1 samples, 0.66%)</title><rect x="69.7368%" y="1029" width="0.6579%" height="15" fill="rgb(235,160,14)" fg:x="106" fg:w="1"/><text x="69.9868%" y="1039.50"></text></g><g><title>_RINvNtCsfjSW78RKgj6_4core3ptr13drop_in_placeNtNtNtNtCs93zYQH5Vhu0_5serde9___private2de7content7ContentECseEhEU3U7BfZ_5cargo (1 samples, 0.66%)</title><rect x="70.3947%" y="1045" width="0.6579%" height="15" fill="rgb(212,155,44)" fg:x="107" fg:w="1"/><text x="70.6447%" y="1055.50"></text></g><g><title>_RINvXs0_NvXNvNtNtNtCseEhEU3U7BfZ_5cargo4util4toml6schema1__NtBb_12TomlManifestNtNtCs93zYQH5Vhu0_5serde2de11Deserialize11deserializeNtB6_9___VisitorNtB1g_7Visitor9visit_mapINtCs5A4PmhQ8HUp_13serde_ignored9MapAccessNtNtNtCsew3jru5kHPb_9toml_edit2de5table14TableMapAccessNCNvBd_22read_manifest_from_str0EEBh_ (1 samples, 0.66%)</title><rect x="71.0526%" y="1045" width="0.6579%" height="15" fill="rgb(226,2,50)" fg:x="108" fg:w="1"/><text x="71.3026%" y="1055.50"></text></g><g><title>_RINvXsb_Cs5A4PmhQ8HUp_13serde_ignoredINtB6_11TrackedSeedINtNtCsfjSW78RKgj6_4core6marker11PhantomDataINtNtBX_6option6OptionINtNtNtNtCsbF9Th3qYG7J_5alloc11collections5btree3map8BTreeMapNtNtB25_6string6StringNtNtNtNtCseEhEU3U7BfZ_5cargo4util4toml6schema12TomlPlatformEEENCNvB3l_22read_manifest_from_str0ENtNtCs93zYQH5Vhu0_5serde2de15DeserializeSeed11deserializeNtNtNtCsew3jru5kHPb_9toml_edit2de5value17ValueDeserializerEB3p_ (1 samples, 0.66%)</title><rect x="71.0526%" y="1029" width="0.6579%" height="15" fill="rgb(234,177,6)" fg:x="108" fg:w="1"/><text x="71.3026%" y="1039.50"></text></g><g><title>_RINvXNtNtCsew3jru5kHPb_9toml_edit2de5tableNtB3_17TableDeserializerNtNtCs93zYQH5Vhu0_5serde2de12Deserializer15deserialize_anyINtCs5A4PmhQ8HUp_13serde_ignored4WrapINtNvXs31_NtB14_5implsINtNtNtNtCsbF9Th3qYG7J_5alloc11collections5btree3map8BTreeMapppENtB14_11Deserialize11deserialize10MapVisitorNtNtB34_6string6StringNtNtNtNtCseEhEU3U7BfZ_5cargo4util4toml6schema12TomlPlatformENCNvB55_22read_manifest_from_str0EEB59_ (1 samples, 0.66%)</title><rect x="71.0526%" y="1013" width="0.6579%" height="15" fill="rgb(217,24,9)" fg:x="108" fg:w="1"/><text x="71.3026%" y="1023.50"></text></g><g><title>_RINvXNtNtCsew3jru5kHPb_9toml_edit2de5tableNtB3_17TableDeserializerNtNtCs93zYQH5Vhu0_5serde2de12Deserializer15deserialize_anyINtCs5A4PmhQ8HUp_13serde_ignored4WrapNtNvXNvNtNtNtCseEhEU3U7BfZ_5cargo4util4toml6schemasp_1__NtB2G_12TomlPlatformNtB14_11Deserialize11deserialize9___VisitorNCNvB2I_22read_manifest_from_str0EEB2M_ (1 samples, 0.66%)</title><rect x="71.0526%" y="997" width="0.6579%" height="15" fill="rgb(220,13,46)" fg:x="108" fg:w="1"/><text x="71.3026%" y="1007.50"></text></g><g><title>_RINvYINtCs5A4PmhQ8HUp_13serde_ignored9MapAccessNtNtNtCsew3jru5kHPb_9toml_edit2de5table14TableMapAccessNCNvNtNtCseEhEU3U7BfZ_5cargo4util4toml22read_manifest_from_str0ENtNtCs93zYQH5Vhu0_5serde2de9MapAccess10next_valueINtNtCsfjSW78RKgj6_4core6option6OptionINtNtNtNtCsbF9Th3qYG7J_5alloc11collections5btree3map8BTreeMapNtNtB4c_6string6StringNtNtB1G_6schema21InheritableDependencyEEEB1K_ (1 samples, 0.66%)</title><rect x="71.0526%" y="981" width="0.6579%" height="15" fill="rgb(239,221,27)" fg:x="108" fg:w="1"/><text x="71.3026%" y="991.50"></text></g><g><title>_RINvXsb_Cs5A4PmhQ8HUp_13serde_ignoredINtB6_11TrackedSeedINtNtCsfjSW78RKgj6_4core6marker11PhantomDataINtNtBX_6option6OptionINtNtNtNtCsbF9Th3qYG7J_5alloc11collections5btree3map8BTreeMapNtNtB25_6string6StringNtNtNtNtCseEhEU3U7BfZ_5cargo4util4toml6schema21InheritableDependencyEEENCNvB3l_22read_manifest_from_str0ENtNtCs93zYQH5Vhu0_5serde2de15DeserializeSeed11deserializeNtNtNtCsew3jru5kHPb_9toml_edit2de5value17ValueDeserializerEB3p_ (1 samples, 0.66%)</title><rect x="71.0526%" y="965" width="0.6579%" height="15" fill="rgb(222,198,25)" fg:x="108" fg:w="1"/><text x="71.3026%" y="975.50"></text></g><g><title>_RINvXNtNtCsew3jru5kHPb_9toml_edit2de5tableNtB3_17TableDeserializerNtNtCs93zYQH5Vhu0_5serde2de12Deserializer15deserialize_anyINtCs5A4PmhQ8HUp_13serde_ignored4WrapINtNvXs31_NtB14_5implsINtNtNtNtCsbF9Th3qYG7J_5alloc11collections5btree3map8BTreeMapppENtB14_11Deserialize11deserialize10MapVisitorNtNtB34_6string6StringNtNtNtNtCseEhEU3U7BfZ_5cargo4util4toml6schema21InheritableDependencyENCNvB55_22read_manifest_from_str0EEB59_ (1 samples, 0.66%)</title><rect x="71.0526%" y="949" width="0.6579%" height="15" fill="rgb(211,99,13)" fg:x="108" fg:w="1"/><text x="71.3026%" y="959.50"></text></g><g><title>_RINvXsd_NtNtNtCseEhEU3U7BfZ_5cargo4util4toml6schemaNtB6_14TomlDependencyNtNtCs93zYQH5Vhu0_5serde2de11Deserialize11deserializeINtNtCsi3TOvgdZAvT_11serde_value2de17ValueDeserializerNtNtCsew3jru5kHPb_9toml_edit2de5ErrorEEBc_ (1 samples, 0.66%)</title><rect x="71.0526%" y="933" width="0.6579%" height="15" fill="rgb(232,111,31)" fg:x="108" fg:w="1"/><text x="71.3026%" y="943.50"></text></g><g><title>_RINvXs9_NtCsi3TOvgdZAvT_11serde_value2deINtB6_17ValueDeserializerNtNtCsew3jru5kHPb_9toml_edit2de5ErrorENtNtCs93zYQH5Vhu0_5serde2de12Deserializer15deserialize_anyINtCsh6THrvnim6o_14serde_untagged19UntaggedEnumVisitorNtNtNtNtCseEhEU3U7BfZ_5cargo4util4toml6schema14TomlDependencyEEB3z_ (1 samples, 0.66%)</title><rect x="71.0526%" y="917" width="0.6579%" height="15" fill="rgb(245,82,37)" fg:x="108" fg:w="1"/><text x="71.3026%" y="927.50"></text></g><g><title>cfree (1 samples, 0.66%)</title><rect x="71.0526%" y="901" width="0.6579%" height="15" fill="rgb(227,149,46)" fg:x="108" fg:w="1"/><text x="71.3026%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="71.0526%" y="885" width="0.6579%" height="15" fill="rgb(218,36,50)" fg:x="108" fg:w="1"/><text x="71.3026%" y="895.50"></text></g><g><title>_RNvNtCseqMLPJdy5Gd_4git24opts27set_verify_owner_validation (1 samples, 0.66%)</title><rect x="71.7105%" y="997" width="0.6579%" height="15" fill="rgb(226,80,48)" fg:x="109" fg:w="1"/><text x="71.9605%" y="1007.50"></text></g><g><title>_RNvCskcFSbD4VACL_11libgit2_sys4init (1 samples, 0.66%)</title><rect x="71.7105%" y="981" width="0.6579%" height="15" fill="rgb(238,224,15)" fg:x="109" fg:w="1"/><text x="71.9605%" y="991.50"></text></g><g><title>_RINvMs0_NtNtNtCsfC4zgGc0p15_3std10sys_common4once5futexNtB6_4Once4callNCINvMs0_NtNtBc_4sync4onceNtB1f_4Once9call_onceNCNvCskcFSbD4VACL_11libgit2_sys4init0E0EB1V_ (1 samples, 0.66%)</title><rect x="71.7105%" y="965" width="0.6579%" height="15" fill="rgb(241,136,10)" fg:x="109" fg:w="1"/><text x="71.9605%" y="975.50"></text></g><g><title>git_runtime_init (1 samples, 0.66%)</title><rect x="71.7105%" y="949" width="0.6579%" height="15" fill="rgb(208,32,45)" fg:x="109" fg:w="1"/><text x="71.9605%" y="959.50"></text></g><g><title>git_openssl_stream_global_init (1 samples, 0.66%)</title><rect x="71.7105%" y="933" width="0.6579%" height="15" fill="rgb(207,135,9)" fg:x="109" fg:w="1"/><text x="71.9605%" y="943.50"></text></g><g><title>X509_STORE_set_default_paths (1 samples, 0.66%)</title><rect x="71.7105%" y="917" width="0.6579%" height="15" fill="rgb(206,86,44)" fg:x="109" fg:w="1"/><text x="71.9605%" y="927.50"></text></g><g><title>by_file_ctrl (1 samples, 0.66%)</title><rect x="71.7105%" y="901" width="0.6579%" height="15" fill="rgb(245,177,15)" fg:x="109" fg:w="1"/><text x="71.9605%" y="911.50"></text></g><g><title>X509_load_cert_crl_file (1 samples, 0.66%)</title><rect x="71.7105%" y="885" width="0.6579%" height="15" fill="rgb(206,64,50)" fg:x="109" fg:w="1"/><text x="71.9605%" y="895.50"></text></g><g><title>PEM_X509_INFO_read_bio (1 samples, 0.66%)</title><rect x="71.7105%" y="869" width="0.6579%" height="15" fill="rgb(234,36,40)" fg:x="109" fg:w="1"/><text x="71.9605%" y="879.50"></text></g><g><title>ASN1_item_d2i (1 samples, 0.66%)</title><rect x="71.7105%" y="853" width="0.6579%" height="15" fill="rgb(213,64,8)" fg:x="109" fg:w="1"/><text x="71.9605%" y="863.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.66%)</title><rect x="71.7105%" y="837" width="0.6579%" height="15" fill="rgb(210,75,36)" fg:x="109" fg:w="1"/><text x="71.9605%" y="847.50"></text></g><g><title>asn1_template_noexp_d2i (1 samples, 0.66%)</title><rect x="71.7105%" y="821" width="0.6579%" height="15" fill="rgb(229,88,21)" fg:x="109" fg:w="1"/><text x="71.9605%" y="831.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.66%)</title><rect x="71.7105%" y="805" width="0.6579%" height="15" fill="rgb(252,204,47)" fg:x="109" fg:w="1"/><text x="71.9605%" y="815.50"></text></g><g><title>asn1_template_ex_d2i (1 samples, 0.66%)</title><rect x="71.7105%" y="789" width="0.6579%" height="15" fill="rgb(208,77,27)" fg:x="109" fg:w="1"/><text x="71.9605%" y="799.50"></text></g><g><title>asn1_template_noexp_d2i (1 samples, 0.66%)</title><rect x="71.7105%" y="773" width="0.6579%" height="15" fill="rgb(221,76,26)" fg:x="109" fg:w="1"/><text x="71.9605%" y="783.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.66%)</title><rect x="71.7105%" y="757" width="0.6579%" height="15" fill="rgb(225,139,18)" fg:x="109" fg:w="1"/><text x="71.9605%" y="767.50"></text></g><g><title>asn1_template_noexp_d2i (1 samples, 0.66%)</title><rect x="71.7105%" y="741" width="0.6579%" height="15" fill="rgb(230,137,11)" fg:x="109" fg:w="1"/><text x="71.9605%" y="751.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.66%)</title><rect x="71.7105%" y="725" width="0.6579%" height="15" fill="rgb(212,28,1)" fg:x="109" fg:w="1"/><text x="71.9605%" y="735.50"></text></g><g><title>asn1_d2i_ex_primitive (1 samples, 0.66%)</title><rect x="71.7105%" y="709" width="0.6579%" height="15" fill="rgb(248,164,17)" fg:x="109" fg:w="1"/><text x="71.9605%" y="719.50"></text></g><g><title>ASN1_STRING_set (1 samples, 0.66%)</title><rect x="71.7105%" y="693" width="0.6579%" height="15" fill="rgb(222,171,42)" fg:x="109" fg:w="1"/><text x="71.9605%" y="703.50"></text></g><g><title>malloc (1 samples, 0.66%)</title><rect x="71.7105%" y="677" width="0.6579%" height="15" fill="rgb(243,84,45)" fg:x="109" fg:w="1"/><text x="71.9605%" y="687.50"></text></g><g><title>_RNvCs2l6RK3KDxwK_5cargo8init_git (2 samples, 1.32%)</title><rect x="71.7105%" y="1013" width="1.3158%" height="15" fill="rgb(252,49,23)" fg:x="109" fg:w="2"/><text x="71.9605%" y="1023.50"></text></g><g><title>_RNvNtNtNtCseEhEU3U7BfZ_5cargo4util7network4http27needs_custom_http_transport (1 samples, 0.66%)</title><rect x="72.3684%" y="997" width="0.6579%" height="15" fill="rgb(215,19,7)" fg:x="110" fg:w="1"/><text x="72.6184%" y="1007.50"></text></g><g><title>_RNvMNtNtCseEhEU3U7BfZ_5cargo4util6configNtB2_6Config11http_config (1 samples, 0.66%)</title><rect x="72.3684%" y="981" width="0.6579%" height="15" fill="rgb(238,81,41)" fg:x="110" fg:w="1"/><text x="72.6184%" y="991.50"></text></g><g><title>_RNvMs_NtNtNtCseEhEU3U7BfZ_5cargo4util6config2deNtB4_15ConfigMapAccess10new_struct (1 samples, 0.66%)</title><rect x="72.3684%" y="965" width="0.6579%" height="15" fill="rgb(210,199,37)" fg:x="110" fg:w="1"/><text x="72.6184%" y="975.50"></text></g><g><title>_RNvMNtNtCseEhEU3U7BfZ_5cargo4util6configNtB2_6Config9get_table (1 samples, 0.66%)</title><rect x="72.3684%" y="949" width="0.6579%" height="15" fill="rgb(244,192,49)" fg:x="110" fg:w="1"/><text x="72.6184%" y="959.50"></text></g><g><title>_RNvMNtNtCseEhEU3U7BfZ_5cargo4util6configNtB2_6Config13get_cv_helper (1 samples, 0.66%)</title><rect x="72.3684%" y="933" width="0.6579%" height="15" fill="rgb(226,211,11)" fg:x="110" fg:w="1"/><text x="72.6184%" y="943.50"></text></g><g><title>_RINvNtCsfjSW78RKgj6_4core3ptr13drop_in_placeNtNtNtCseEhEU3U7BfZ_5cargo3ops21cargo_output_metadata10ExportInfoECs2l6RK3KDxwK_5cargo (1 samples, 0.66%)</title><rect x="73.0263%" y="997" width="0.6579%" height="15" fill="rgb(236,162,54)" fg:x="111" fg:w="1"/><text x="73.2763%" y="1007.50"></text></g><g><title>_RINvNtCsfjSW78RKgj6_4core3ptr13drop_in_placeNtNtNtCseEhEU3U7BfZ_5cargo4core7package17SerializedPackageECs2l6RK3KDxwK_5cargo (1 samples, 0.66%)</title><rect x="73.0263%" y="981" width="0.6579%" height="15" fill="rgb(220,229,9)" fg:x="111" fg:w="1"/><text x="73.2763%" y="991.50"></text></g><g><title>_RINvNtCsfjSW78RKgj6_4core3ptr13drop_in_placeINtNtCsbF9Th3qYG7J_5alloc3vec3VecNtNtNtCseEhEU3U7BfZ_5cargo4core10dependency10DependencyEECs2l6RK3KDxwK_5cargo (1 samples, 0.66%)</title><rect x="73.0263%" y="965" width="0.6579%" height="15" fill="rgb(250,87,22)" fg:x="111" fg:w="1"/><text x="73.2763%" y="975.50"></text></g><g><title>cfree (1 samples, 0.66%)</title><rect x="73.0263%" y="949" width="0.6579%" height="15" fill="rgb(239,43,17)" fg:x="111" fg:w="1"/><text x="73.2763%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="73.0263%" y="933" width="0.6579%" height="15" fill="rgb(231,177,25)" fg:x="111" fg:w="1"/><text x="73.2763%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="73.0263%" y="917" width="0.6579%" height="15" fill="rgb(219,179,1)" fg:x="111" fg:w="1"/><text x="73.2763%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="73.0263%" y="901" width="0.6579%" height="15" fill="rgb(238,219,53)" fg:x="111" fg:w="1"/><text x="73.2763%" y="911.50"></text></g><g><title>_RINvXs0_NtNtCseEhEU3U7BfZ_5cargo4core10package_idNtB6_9PackageIdNtNtCs93zYQH5Vhu0_5serde3ser9Serialize9serializeQINtNtCsqA2ERIVgZW_10serde_json3ser10SerializerQINtNtCsbF9Th3qYG7J_5alloc3vec3VechEEECs2l6RK3KDxwK_5cargo (1 samples, 0.66%)</title><rect x="73.6842%" y="997" width="0.6579%" height="15" fill="rgb(232,167,36)" fg:x="112" fg:w="1"/><text x="73.9342%" y="1007.50"></text></g><g><title>core::fmt::write (1 samples, 0.66%)</title><rect x="73.6842%" y="981" width="0.6579%" height="15" fill="rgb(244,19,51)" fg:x="112" fg:w="1"/><text x="73.9342%" y="991.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.66%)</title><rect x="73.6842%" y="965" width="0.6579%" height="15" fill="rgb(224,6,22)" fg:x="112" fg:w="1"/><text x="73.9342%" y="975.50"></text></g><g><title>core::fmt::write (1 samples, 0.66%)</title><rect x="73.6842%" y="949" width="0.6579%" height="15" fill="rgb(224,145,5)" fg:x="112" fg:w="1"/><text x="73.9342%" y="959.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.66%)</title><rect x="73.6842%" y="933" width="0.6579%" height="15" fill="rgb(234,130,49)" fg:x="112" fg:w="1"/><text x="73.9342%" y="943.50"></text></g><g><title>_RNvXsc_NtNtCseEhEU3U7BfZ_5cargo4core9source_idNtB5_13SourceIdAsUrlNtNtCsfjSW78RKgj6_4core3fmt7Display3fmt (1 samples, 0.66%)</title><rect x="73.6842%" y="917" width="0.6579%" height="15" fill="rgb(254,6,2)" fg:x="112" fg:w="1"/><text x="73.9342%" y="927.50"></text></g><g><title>core::fmt::write (1 samples, 0.66%)</title><rect x="73.6842%" y="901" width="0.6579%" height="15" fill="rgb(208,96,46)" fg:x="112" fg:w="1"/><text x="73.9342%" y="911.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.66%)</title><rect x="73.6842%" y="885" width="0.6579%" height="15" fill="rgb(239,3,39)" fg:x="112" fg:w="1"/><text x="73.9342%" y="895.50"></text></g><g><title>_RNvXNvXs1_NtCsqA2ERIVgZW_10serde_json3serQINtB8_10SerializerppENtNtCs93zYQH5Vhu0_5serde3ser10Serializer11collect_strINtB2_7AdapterQINtNtCsbF9Th3qYG7J_5alloc3vec3VechENtB8_16CompactFormatterENtNtCsfjSW78RKgj6_4core3fmt5Write9write_strCs2l6RK3KDxwK_5cargo (1 samples, 0.66%)</title><rect x="73.6842%" y="869" width="0.6579%" height="15" fill="rgb(233,210,1)" fg:x="112" fg:w="1"/><text x="73.9342%" y="879.50"></text></g><g><title>_RINvNtCsqA2ERIVgZW_10serde_json3ser27format_escaped_str_contentsQINtNtCsbF9Th3qYG7J_5alloc3vec3VechENtB2_16CompactFormatterECs2l6RK3KDxwK_5cargo (1 samples, 0.66%)</title><rect x="73.6842%" y="853" width="0.6579%" height="15" fill="rgb(244,137,37)" fg:x="112" fg:w="1"/><text x="73.9342%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="73.6842%" y="837" width="0.6579%" height="15" fill="rgb(240,136,2)" fg:x="112" fg:w="1"/><text x="73.9342%" y="847.50"></text></g><g><title>_RINvXs1G_NtNtCs93zYQH5Vhu0_5serde3ser5implsRNtNtNtCseEhEU3U7BfZ_5cargo4core7package17SerializedPackageNtB9_9Serialize9serializeQINtNtCsqA2ERIVgZW_10serde_json3ser10SerializerQINtNtCsbF9Th3qYG7J_5alloc3vec3VechEEECs2l6RK3KDxwK_5cargo (1 samples, 0.66%)</title><rect x="74.3421%" y="997" width="0.6579%" height="15" fill="rgb(239,18,37)" fg:x="113" fg:w="1"/><text x="74.5921%" y="1007.50"></text></g><g><title>_RINvXs7_NtCsqA2ERIVgZW_10serde_json3serINtB6_8CompoundQINtNtCsbF9Th3qYG7J_5alloc3vec3VechENtB6_16CompactFormatterENtNtCs93zYQH5Vhu0_5serde3ser15SerializeStruct15serialize_fieldReECs2l6RK3KDxwK_5cargo (1 samples, 0.66%)</title><rect x="74.3421%" y="981" width="0.6579%" height="15" fill="rgb(218,185,22)" fg:x="113" fg:w="1"/><text x="74.5921%" y="991.50"></text></g><g><title>_RINvNtCsqA2ERIVgZW_10serde_json3ser27format_escaped_str_contentsQINtNtCsbF9Th3qYG7J_5alloc3vec3VechENtB2_16CompactFormatterECs2l6RK3KDxwK_5cargo (1 samples, 0.66%)</title><rect x="74.3421%" y="965" width="0.6579%" height="15" fill="rgb(225,218,4)" fg:x="113" fg:w="1"/><text x="74.5921%" y="975.50"></text></g><g><title>_RNvCs2l6RK3KDxwK_5cargo4main (6 samples, 3.95%)</title><rect x="71.7105%" y="1045" width="3.9474%" height="15" fill="rgb(230,182,32)" fg:x="109" fg:w="6"/><text x="71.9605%" y="1055.50">_RNv..</text></g><g><title>_RNvNtCs2l6RK3KDxwK_5cargo3cli4main (6 samples, 3.95%)</title><rect x="71.7105%" y="1029" width="3.9474%" height="15" fill="rgb(242,56,43)" fg:x="109" fg:w="6"/><text x="71.9605%" y="1039.50">_RNv..</text></g><g><title>_RNvNtNtCs2l6RK3KDxwK_5cargo8commands8metadata4exec (4 samples, 2.63%)</title><rect x="73.0263%" y="1013" width="2.6316%" height="15" fill="rgb(233,99,24)" fg:x="111" fg:w="4"/><text x="73.2763%" y="1023.50">_R..</text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops21cargo_output_metadata15output_metadata (1 samples, 0.66%)</title><rect x="75.0000%" y="997" width="0.6579%" height="15" fill="rgb(234,209,42)" fg:x="114" fg:w="1"/><text x="75.2500%" y="1007.50"></text></g><g><title>_RINvNtCsfjSW78RKgj6_4core3ptr13drop_in_placeNtNtNtCseEhEU3U7BfZ_5cargo3ops7resolve16WorkspaceResolveEBM_ (1 samples, 0.66%)</title><rect x="75.0000%" y="981" width="0.6579%" height="15" fill="rgb(227,7,12)" fg:x="114" fg:w="1"/><text x="75.2500%" y="991.50"></text></g><g><title>_RINvNtCsfjSW78RKgj6_4core3ptr13drop_in_placeNtNtNtCseEhEU3U7BfZ_5cargo4core7package10PackageSetEBM_ (1 samples, 0.66%)</title><rect x="75.0000%" y="965" width="0.6579%" height="15" fill="rgb(245,203,43)" fg:x="114" fg:w="1"/><text x="75.2500%" y="975.50"></text></g><g><title>_RINvNtCsfjSW78RKgj6_4core3ptr13drop_in_placeINtNtCse7z0NyktTFx_9hashbrown3raw8RawTableTNtNtNtCseEhEU3U7BfZ_5cargo4core9source_id8SourceIdINtNtCsbF9Th3qYG7J_5alloc5boxed3BoxDNtNtNtB1t_7sources6source6SourceEL_EEEEB1t_ (1 samples, 0.66%)</title><rect x="75.0000%" y="949" width="0.6579%" height="15" fill="rgb(238,205,33)" fg:x="114" fg:w="1"/><text x="75.2500%" y="959.50"></text></g><g><title>_RINvNtCsfjSW78RKgj6_4core3ptr13drop_in_placeNtNtNtCseEhEU3U7BfZ_5cargo7sources8replaced14ReplacedSourceEBM_ (1 samples, 0.66%)</title><rect x="75.0000%" y="933" width="0.6579%" height="15" fill="rgb(231,56,7)" fg:x="114" fg:w="1"/><text x="75.2500%" y="943.50"></text></g><g><title>_RINvNtCsfjSW78RKgj6_4core3ptr13drop_in_placeNtNtNtCseEhEU3U7BfZ_5cargo7sources8registry14RegistrySourceEBM_ (1 samples, 0.66%)</title><rect x="75.0000%" y="917" width="0.6579%" height="15" fill="rgb(244,186,29)" fg:x="114" fg:w="1"/><text x="75.2500%" y="927.50"></text></g><g><title>_RINvNtCsfjSW78RKgj6_4core3ptr13drop_in_placeNtNtNtNtCseEhEU3U7BfZ_5cargo7sources8registry5index13RegistryIndexEBO_ (1 samples, 0.66%)</title><rect x="75.0000%" y="901" width="0.6579%" height="15" fill="rgb(234,111,31)" fg:x="114" fg:w="1"/><text x="75.2500%" y="911.50"></text></g><g><title>_RINvNtCsfjSW78RKgj6_4core3ptr13drop_in_placeNtNtNtNtCseEhEU3U7BfZ_5cargo7sources8registry5index9SummariesEBO_ (1 samples, 0.66%)</title><rect x="75.0000%" y="885" width="0.6579%" height="15" fill="rgb(241,149,10)" fg:x="114" fg:w="1"/><text x="75.2500%" y="895.50"></text></g><g><title>cfree (1 samples, 0.66%)</title><rect x="75.0000%" y="869" width="0.6579%" height="15" fill="rgb(249,206,44)" fg:x="114" fg:w="1"/><text x="75.2500%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="75.0000%" y="853" width="0.6579%" height="15" fill="rgb(251,153,30)" fg:x="114" fg:w="1"/><text x="75.2500%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="75.0000%" y="837" width="0.6579%" height="15" fill="rgb(239,152,38)" fg:x="114" fg:w="1"/><text x="75.2500%" y="847.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="75.0000%" y="821" width="0.6579%" height="15" fill="rgb(249,139,47)" fg:x="114" fg:w="1"/><text x="75.2500%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="75.0000%" y="805" width="0.6579%" height="15" fill="rgb(244,64,35)" fg:x="114" fg:w="1"/><text x="75.2500%" y="815.50"></text></g><g><title>_RNvMNtCs5UOc0VNYAi4_6semver10identifierNtB2_10Identifier6as_str (1 samples, 0.66%)</title><rect x="75.6579%" y="1045" width="0.6579%" height="15" fill="rgb(216,46,15)" fg:x="115" fg:w="1"/><text x="75.9079%" y="1055.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops21cargo_output_metadata21build_resolve_graph_r (1 samples, 0.66%)</title><rect x="76.3158%" y="997" width="0.6579%" height="15" fill="rgb(250,74,19)" fg:x="116" fg:w="1"/><text x="76.5658%" y="1007.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops21cargo_output_metadata21build_resolve_graph_r (1 samples, 0.66%)</title><rect x="76.3158%" y="981" width="0.6579%" height="15" fill="rgb(249,42,33)" fg:x="116" fg:w="1"/><text x="76.5658%" y="991.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops21cargo_output_metadata21build_resolve_graph_r (1 samples, 0.66%)</title><rect x="76.3158%" y="965" width="0.6579%" height="15" fill="rgb(242,149,17)" fg:x="116" fg:w="1"/><text x="76.5658%" y="975.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops21cargo_output_metadata21build_resolve_graph_r (1 samples, 0.66%)</title><rect x="76.3158%" y="949" width="0.6579%" height="15" fill="rgb(244,29,21)" fg:x="116" fg:w="1"/><text x="76.5658%" y="959.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops21cargo_output_metadata21build_resolve_graph_r (1 samples, 0.66%)</title><rect x="76.3158%" y="933" width="0.6579%" height="15" fill="rgb(220,130,37)" fg:x="116" fg:w="1"/><text x="76.5658%" y="943.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops21cargo_output_metadata21build_resolve_graph_r (1 samples, 0.66%)</title><rect x="76.3158%" y="917" width="0.6579%" height="15" fill="rgb(211,67,2)" fg:x="116" fg:w="1"/><text x="76.5658%" y="927.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops21cargo_output_metadata21build_resolve_graph_r (1 samples, 0.66%)</title><rect x="76.3158%" y="901" width="0.6579%" height="15" fill="rgb(235,68,52)" fg:x="116" fg:w="1"/><text x="76.5658%" y="911.50"></text></g><g><title>_RINvMsi_NtNtNtCsbF9Th3qYG7J_5alloc11collections5btree3mapINtB6_8BTreeMapNtNtNtCseEhEU3U7BfZ_5cargo4core10package_id9PackageIdNtNtNtB1e_3ops21cargo_output_metadata19MetadataResolveNodeE3getB18_EB1e_ (1 samples, 0.66%)</title><rect x="76.3158%" y="885" width="0.6579%" height="15" fill="rgb(246,142,3)" fg:x="116" fg:w="1"/><text x="76.5658%" y="895.50"></text></g><g><title>_RNvMs1_NtNtCseEhEU3U7BfZ_5cargo4core20global_cache_trackerNtB5_21DeferredGlobalLastUse13save_no_error (1 samples, 0.66%)</title><rect x="76.9737%" y="965" width="0.6579%" height="15" fill="rgb(241,25,7)" fg:x="117" fg:w="1"/><text x="77.2237%" y="975.50"></text></g><g><title>_RNvMs1_NtNtCseEhEU3U7BfZ_5cargo4core20global_cache_trackerNtB5_21DeferredGlobalLastUse4save (1 samples, 0.66%)</title><rect x="76.9737%" y="949" width="0.6579%" height="15" fill="rgb(242,119,39)" fg:x="117" fg:w="1"/><text x="77.2237%" y="959.50"></text></g><g><title>_RNvMNtCs7KZEOFgqHOK_8rusqlite9statementNtB2_9Statement29execute_with_bound_parameters (1 samples, 0.66%)</title><rect x="76.9737%" y="933" width="0.6579%" height="15" fill="rgb(241,98,45)" fg:x="117" fg:w="1"/><text x="77.2237%" y="943.50"></text></g><g><title>sqlite3_step (1 samples, 0.66%)</title><rect x="76.9737%" y="917" width="0.6579%" height="15" fill="rgb(254,28,30)" fg:x="117" fg:w="1"/><text x="77.2237%" y="927.50"></text></g><g><title>sqlite3VdbeExec (1 samples, 0.66%)</title><rect x="76.9737%" y="901" width="0.6579%" height="15" fill="rgb(241,142,54)" fg:x="117" fg:w="1"/><text x="77.2237%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="76.9737%" y="885" width="0.6579%" height="15" fill="rgb(222,85,15)" fg:x="117" fg:w="1"/><text x="77.2237%" y="895.50"></text></g><g><title>_RNvMs6_NtNtCseEhEU3U7BfZ_5cargo4core7packageNtB5_10PackageSet19download_accessible (2 samples, 1.32%)</title><rect x="76.9737%" y="981" width="1.3158%" height="15" fill="rgb(210,85,47)" fg:x="117" fg:w="2"/><text x="77.2237%" y="991.50"></text></g><g><title>_RNvMs7_NtNtCseEhEU3U7BfZ_5cargo4core7packageNtB5_9Downloads5start (1 samples, 0.66%)</title><rect x="77.6316%" y="965" width="0.6579%" height="15" fill="rgb(224,206,25)" fg:x="118" fg:w="1"/><text x="77.8816%" y="975.50"></text></g><g><title>_RINvMs1_NtCse7z0NyktTFx_9hashbrown3mapINtB6_7HashMapNtNtNtCseEhEU3U7BfZ_5cargo4core10package_id9PackageIdINtCsl8uy0AlCqef_8lazycell8LazyCellNtNtBS_7package7PackageENtNtNtCsfC4zgGc0p15_3std4hash6random11RandomStateE3getBO_EBU_ (1 samples, 0.66%)</title><rect x="77.6316%" y="949" width="0.6579%" height="15" fill="rgb(243,201,19)" fg:x="118" fg:w="1"/><text x="77.8816%" y="959.50"></text></g><g><title>_RINvYNtNtNtCsfC4zgGc0p15_3std4hash6random11RandomStateNtNtCsfjSW78RKgj6_4core4hash11BuildHasher8hash_oneRNtNtNtCseEhEU3U7BfZ_5cargo4core10package_id9PackageIdEB1L_ (1 samples, 0.66%)</title><rect x="77.6316%" y="933" width="0.6579%" height="15" fill="rgb(236,59,4)" fg:x="118" fg:w="1"/><text x="77.8816%" y="943.50"></text></g><g><title>_RINvXs6_NtNtCseEhEU3U7BfZ_5cargo4core9source_idNtB6_8SourceIdNtNtCsfjSW78RKgj6_4core4hash4Hash4hashNtNtNtCsfC4zgGc0p15_3std4hash6random13DefaultHasherEBa_ (1 samples, 0.66%)</title><rect x="77.6316%" y="917" width="0.6579%" height="15" fill="rgb(254,179,45)" fg:x="118" fg:w="1"/><text x="77.8816%" y="927.50"></text></g><g><title>_RNvXs3_NtNtCsfjSW78RKgj6_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCseEhEU3U7BfZ_5cargo (1 samples, 0.66%)</title><rect x="77.6316%" y="901" width="0.6579%" height="15" fill="rgb(226,14,10)" fg:x="118" fg:w="1"/><text x="77.8816%" y="911.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops7resolve21resolve_with_previous (1 samples, 0.66%)</title><rect x="78.2895%" y="981" width="0.6579%" height="15" fill="rgb(244,27,41)" fg:x="119" fg:w="1"/><text x="78.5395%" y="991.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo4core8resolver7resolve (1 samples, 0.66%)</title><rect x="78.2895%" y="965" width="0.6579%" height="15" fill="rgb(235,35,32)" fg:x="119" fg:w="1"/><text x="78.5395%" y="975.50"></text></g><g><title>_RNvXNtCsciZRXa4rpTu_12sized_chunks12sparse_chunkINtB2_11SparseChunkINtNtNtCs9nmaJ9hxube_5im_rc5nodes4hamt5EntryTNtNtNtCseEhEU3U7BfZ_5cargo4core10package_id9PackageIdINtNtCsbF9Th3qYG7J_5alloc2rc2RcINtNtNtNtB2I_11collections5btree3set8BTreeSetNtNtNtB1S_4util9interning14InternedStringEEEEINtNtCskQisOhSxJeg_7typenum4uint4UIntIB4B_IB4B_IB4B_IB4B_IB4B_NtB4D_5UTermNtNtB4F_3bit2B1ENtB5O_2B0EB62_EB62_EB62_EB62_EENtNtNtCsfjSW78RKgj6_4core3ops4drop4Drop4dropB1S_ (1 samples, 0.66%)</title><rect x="78.2895%" y="949" width="0.6579%" height="15" fill="rgb(218,68,31)" fg:x="119" fg:w="1"/><text x="78.5395%" y="959.50"></text></g><g><title>_RNvXNtCsciZRXa4rpTu_12sized_chunks12sparse_chunkINtB2_11SparseChunkINtNtNtCs9nmaJ9hxube_5im_rc5nodes4hamt5EntryTNtNtNtCseEhEU3U7BfZ_5cargo4core10package_id9PackageIdINtNtCsbF9Th3qYG7J_5alloc2rc2RcINtNtNtNtB2I_11collections5btree3set8BTreeSetNtNtNtB1S_4util9interning14InternedStringEEEEINtNtCskQisOhSxJeg_7typenum4uint4UIntIB4B_IB4B_IB4B_IB4B_IB4B_NtB4D_5UTermNtNtB4F_3bit2B1ENtB5O_2B0EB62_EB62_EB62_EB62_EENtNtNtCsfjSW78RKgj6_4core3ops4drop4Drop4dropB1S_ (1 samples, 0.66%)</title><rect x="78.2895%" y="933" width="0.6579%" height="15" fill="rgb(207,120,37)" fg:x="119" fg:w="1"/><text x="78.5395%" y="943.50"></text></g><g><title>_RINvNtCsfjSW78RKgj6_4core3ptr13drop_in_placeINtNtCsbF9Th3qYG7J_5alloc2rc2RcINtNtNtNtBL_11collections5btree3set8BTreeSetNtNtNtCseEhEU3U7BfZ_5cargo4util9interning14InternedStringEEEB1Z_ (1 samples, 0.66%)</title><rect x="78.2895%" y="917" width="0.6579%" height="15" fill="rgb(227,98,0)" fg:x="119" fg:w="1"/><text x="78.5395%" y="927.50"></text></g><g><title>_RNvMsx_NtNtNtCsbF9Th3qYG7J_5alloc11collections5btree3mapINtB5_8IntoIterNtNtNtCseEhEU3U7BfZ_5cargo4util9interning14InternedStringNtNtB7_7set_val9SetValZSTE10dying_nextB1d_ (1 samples, 0.66%)</title><rect x="78.2895%" y="901" width="0.6579%" height="15" fill="rgb(207,7,3)" fg:x="119" fg:w="1"/><text x="78.5395%" y="911.50"></text></g><g><title>cfree (1 samples, 0.66%)</title><rect x="78.2895%" y="885" width="0.6579%" height="15" fill="rgb(206,98,19)" fg:x="119" fg:w="1"/><text x="78.5395%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="78.2895%" y="869" width="0.6579%" height="15" fill="rgb(217,5,26)" fg:x="119" fg:w="1"/><text x="78.5395%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="78.2895%" y="853" width="0.6579%" height="15" fill="rgb(235,190,38)" fg:x="119" fg:w="1"/><text x="78.5395%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="78.2895%" y="837" width="0.6579%" height="15" fill="rgb(247,86,24)" fg:x="119" fg:w="1"/><text x="78.5395%" y="847.50"></text></g><g><title>_RNvNtCs2l6RK3KDxwK_5cargo3cli4main (5 samples, 3.29%)</title><rect x="76.3158%" y="1045" width="3.2895%" height="15" fill="rgb(205,101,16)" fg:x="116" fg:w="5"/><text x="76.5658%" y="1055.50">_RN..</text></g><g><title>_RNvNtNtCs2l6RK3KDxwK_5cargo8commands8metadata4exec (5 samples, 3.29%)</title><rect x="76.3158%" y="1029" width="3.2895%" height="15" fill="rgb(246,168,33)" fg:x="116" fg:w="5"/><text x="76.5658%" y="1039.50">_RN..</text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops21cargo_output_metadata15output_metadata (5 samples, 3.29%)</title><rect x="76.3158%" y="1013" width="3.2895%" height="15" fill="rgb(231,114,1)" fg:x="116" fg:w="5"/><text x="76.5658%" y="1023.50">_RN..</text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops7resolve20resolve_ws_with_opts (4 samples, 2.63%)</title><rect x="76.9737%" y="997" width="2.6316%" height="15" fill="rgb(207,184,53)" fg:x="117" fg:w="4"/><text x="77.2237%" y="1007.50">_R..</text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops7resolve21resolve_with_registry (1 samples, 0.66%)</title><rect x="78.9474%" y="981" width="0.6579%" height="15" fill="rgb(224,95,51)" fg:x="120" fg:w="1"/><text x="79.1974%" y="991.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops8lockfile18write_pkg_lockfile (1 samples, 0.66%)</title><rect x="78.9474%" y="965" width="0.6579%" height="15" fill="rgb(212,188,45)" fg:x="120" fg:w="1"/><text x="79.1974%" y="975.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops8lockfile22resolve_to_string_orig (1 samples, 0.66%)</title><rect x="78.9474%" y="949" width="0.6579%" height="15" fill="rgb(223,154,38)" fg:x="120" fg:w="1"/><text x="79.1974%" y="959.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops8lockfile17serialize_resolve (1 samples, 0.66%)</title><rect x="78.9474%" y="933" width="0.6579%" height="15" fill="rgb(251,22,52)" fg:x="120" fg:w="1"/><text x="79.1974%" y="943.50"></text></g><g><title>_RNvNtNtNtCseEhEU3U7BfZ_5cargo4core8resolver6encode22encodable_resolve_node (1 samples, 0.66%)</title><rect x="78.9474%" y="917" width="0.6579%" height="15" fill="rgb(229,209,22)" fg:x="120" fg:w="1"/><text x="79.1974%" y="927.50"></text></g><g><title>_RNvNtNtNtCseEhEU3U7BfZ_5cargo4core8resolver6encode20encodable_package_id (1 samples, 0.66%)</title><rect x="78.9474%" y="901" width="0.6579%" height="15" fill="rgb(234,138,34)" fg:x="120" fg:w="1"/><text x="79.1974%" y="911.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops19cargo_read_manifest12read_package (1 samples, 0.66%)</title><rect x="79.6053%" y="1045" width="0.6579%" height="15" fill="rgb(212,95,11)" fg:x="121" fg:w="1"/><text x="79.8553%" y="1055.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo4util4toml13read_manifest (1 samples, 0.66%)</title><rect x="79.6053%" y="1029" width="0.6579%" height="15" fill="rgb(240,179,47)" fg:x="121" fg:w="1"/><text x="79.8553%" y="1039.50"></text></g><g><title>_RNvXs5_NtCsew3jru5kHPb_9toml_edit2deNtB5_12DeserializerNtNtNtCsfjSW78RKgj6_4core3str6traits7FromStr8from_str (1 samples, 0.66%)</title><rect x="79.6053%" y="1013" width="0.6579%" height="15" fill="rgb(240,163,11)" fg:x="121" fg:w="1"/><text x="79.8553%" y="1023.50"></text></g><g><title>_RNvNtCsew3jru5kHPb_9toml_edit6parser14parse_document (1 samples, 0.66%)</title><rect x="79.6053%" y="997" width="0.6579%" height="15" fill="rgb(236,37,12)" fg:x="121" fg:w="1"/><text x="79.8553%" y="1007.50"></text></g><g><title>_RNCINvNtNtCskCmgjJHPcu3_6winnow10combinator5multi6repeatINtNtB8_6stream7LocatedRNtBV_4BStrETuuEuNtNtB8_5error12ContextErrorTNCNvNtNtCsew3jru5kHPb_9toml_edit6parser8document8documents0_0NCNvB22_8parse_ws0EINtNtNtCsfjSW78RKgj6_4core3ops5range9RangeFromjEE0B26_ (1 samples, 0.66%)</title><rect x="79.6053%" y="981" width="0.6579%" height="15" fill="rgb(232,164,16)" fg:x="121" fg:w="1"/><text x="79.8553%" y="991.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="79.6053%" y="965" width="0.6579%" height="15" fill="rgb(244,205,15)" fg:x="121" fg:w="1"/><text x="79.8553%" y="975.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops21cargo_output_metadata15output_metadata (1 samples, 0.66%)</title><rect x="80.2632%" y="1045" width="0.6579%" height="15" fill="rgb(223,117,47)" fg:x="122" fg:w="1"/><text x="80.5132%" y="1055.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops7resolve20resolve_ws_with_opts (1 samples, 0.66%)</title><rect x="80.2632%" y="1029" width="0.6579%" height="15" fill="rgb(244,107,35)" fg:x="122" fg:w="1"/><text x="80.5132%" y="1039.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops7resolve21resolve_with_registry (1 samples, 0.66%)</title><rect x="80.2632%" y="1013" width="0.6579%" height="15" fill="rgb(205,140,8)" fg:x="122" fg:w="1"/><text x="80.5132%" y="1023.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo3ops8lockfile17load_pkg_lockfile (1 samples, 0.66%)</title><rect x="80.2632%" y="997" width="0.6579%" height="15" fill="rgb(228,84,46)" fg:x="122" fg:w="1"/><text x="80.5132%" y="1007.50"></text></g><g><title>_RINvXs3_NtCshsZpnZFUFH7_4toml2deNtB6_12DeserializerNtNtCs93zYQH5Vhu0_5serde2de12Deserializer18deserialize_structNtNvXNvNtNtNtCseEhEU3U7BfZ_5cargo4core8resolver6encodes_1__NtB1T_16EncodableResolveNtBP_11Deserialize11deserialize9___VisitorEB1Z_ (1 samples, 0.66%)</title><rect x="80.2632%" y="981" width="0.6579%" height="15" fill="rgb(254,188,9)" fg:x="122" fg:w="1"/><text x="80.5132%" y="991.50"></text></g><g><title>_RINvXNtNtCsew3jru5kHPb_9toml_edit2de5tableNtB3_17TableDeserializerNtNtCs93zYQH5Vhu0_5serde2de12Deserializer15deserialize_anyNtNvXNvNtNtNtCseEhEU3U7BfZ_5cargo4core8resolver6encodes_1__NtB25_16EncodableResolveNtB14_11Deserialize11deserialize9___VisitorEB2b_ (1 samples, 0.66%)</title><rect x="80.2632%" y="965" width="0.6579%" height="15" fill="rgb(206,112,54)" fg:x="122" fg:w="1"/><text x="80.5132%" y="975.50"></text></g><g><title>_RINvXs3_NtCs93zYQH5Vhu0_5serde2deINtNtCsfjSW78RKgj6_4core6marker11PhantomDataINtNtBA_6option6OptionINtNtCsbF9Th3qYG7J_5alloc3vec3VecNtNtNtNtCseEhEU3U7BfZ_5cargo4core8resolver6encode19EncodableDependencyEEENtB6_15DeserializeSeed11deserializeNtNtNtCsew3jru5kHPb_9toml_edit2de5value17ValueDeserializerEB2e_ (1 samples, 0.66%)</title><rect x="80.2632%" y="949" width="0.6579%" height="15" fill="rgb(216,84,49)" fg:x="122" fg:w="1"/><text x="80.5132%" y="959.50"></text></g><g><title>_RINvXsh_NtNtCs93zYQH5Vhu0_5serde2de5implsINtNtCsbF9Th3qYG7J_5alloc3vec3VecNtNtNtNtCseEhEU3U7BfZ_5cargo4core8resolver6encode19EncodableDependencyENtB8_11Deserialize11deserializeNtNtNtCsew3jru5kHPb_9toml_edit2de5value17ValueDeserializerEB1i_ (1 samples, 0.66%)</title><rect x="80.2632%" y="933" width="0.6579%" height="15" fill="rgb(214,194,35)" fg:x="122" fg:w="1"/><text x="80.5132%" y="943.50"></text></g><g><title>_RINvXs_NtNtCsew3jru5kHPb_9toml_edit2de5arrayNtB5_17ArrayDeserializerNtNtCs93zYQH5Vhu0_5serde2de12Deserializer15deserialize_anyINtNvXsh_NtB16_5implsINtNtCsbF9Th3qYG7J_5alloc3vec3VecpENtB16_11Deserialize11deserialize10VecVisitorNtNtNtNtCseEhEU3U7BfZ_5cargo4core8resolver6encode19EncodableDependencyEEB3K_ (1 samples, 0.66%)</title><rect x="80.2632%" y="917" width="0.6579%" height="15" fill="rgb(249,28,3)" fg:x="122" fg:w="1"/><text x="80.5132%" y="927.50"></text></g><g><title>_RINvXNvNtNtNtCseEhEU3U7BfZ_5cargo4core8resolver6encodes3_1__NtB5_19EncodableDependencyNtNtCs93zYQH5Vhu0_5serde2de11Deserialize11deserializeNtNtNtCsew3jru5kHPb_9toml_edit2de5value17ValueDeserializerEBb_ (1 samples, 0.66%)</title><rect x="80.2632%" y="901" width="0.6579%" height="15" fill="rgb(222,56,52)" fg:x="122" fg:w="1"/><text x="80.5132%" y="911.50"></text></g><g><title>_RINvXNtNtCsew3jru5kHPb_9toml_edit2de5tableNtB3_17TableDeserializerNtNtCs93zYQH5Vhu0_5serde2de12Deserializer15deserialize_anyNtNvXNvNtNtNtCseEhEU3U7BfZ_5cargo4core8resolver6encodes3_1__NtB25_19EncodableDependencyNtB14_11Deserialize11deserialize9___VisitorEB2b_ (1 samples, 0.66%)</title><rect x="80.2632%" y="885" width="0.6579%" height="15" fill="rgb(245,217,50)" fg:x="122" fg:w="1"/><text x="80.5132%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="80.2632%" y="869" width="0.6579%" height="15" fill="rgb(213,201,24)" fg:x="122" fg:w="1"/><text x="80.5132%" y="879.50"></text></g><g><title>_RINvXsc_NtNtCseEhEU3U7BfZ_5cargo4core10dependencyNtB6_10DependencyNtNtCsfjSW78RKgj6_4core4hash4Hash4hashNtNtNtCsfC4zgGc0p15_3std4hash6random13DefaultHasherEBa_ (1 samples, 0.66%)</title><rect x="80.9211%" y="1013" width="0.6579%" height="15" fill="rgb(248,116,28)" fg:x="123" fg:w="1"/><text x="81.1711%" y="1023.50"></text></g><g><title>_RINvYNtCs5UOc0VNYAi4_6semver10ComparatorNtNtCsfjSW78RKgj6_4core4hash4Hash10hash_sliceNtNtNtCsfC4zgGc0p15_3std4hash6random13DefaultHasherECseEhEU3U7BfZ_5cargo (1 samples, 0.66%)</title><rect x="80.9211%" y="997" width="0.6579%" height="15" fill="rgb(219,72,43)" fg:x="123" fg:w="1"/><text x="81.1711%" y="1007.50"></text></g><g><title>_RNvXs3_NtNtCsfjSW78RKgj6_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCseEhEU3U7BfZ_5cargo (1 samples, 0.66%)</title><rect x="80.9211%" y="981" width="0.6579%" height="15" fill="rgb(209,138,14)" fg:x="123" fg:w="1"/><text x="81.1711%" y="991.50"></text></g><g><title>_RNvMNtNtCseEhEU3U7BfZ_5cargo4core8registryNtB2_15PackageRegistry13ensure_loaded (5 samples, 3.29%)</title><rect x="81.5789%" y="965" width="3.2895%" height="15" fill="rgb(222,18,33)" fg:x="124" fg:w="5"/><text x="81.8289%" y="975.50">_RN..</text></g><g><title>_RNvXs_NtNtCseEhEU3U7BfZ_5cargo4core8registryNtB4_15PackageRegistryNtB4_8Registry17block_until_ready (5 samples, 3.29%)</title><rect x="81.5789%" y="949" width="3.2895%" height="15" fill="rgb(213,199,7)" fg:x="124" fg:w="5"/><text x="81.8289%" y="959.50">_RN..</text></g><g><title>_RNvXs0_NtNtNtCseEhEU3U7BfZ_5cargo7sources3git6sourceNtB5_9GitSourceNtNtB9_6source6Source17block_until_ready (5 samples, 3.29%)</title><rect x="81.5789%" y="933" width="3.2895%" height="15" fill="rgb(250,110,10)" fg:x="124" fg:w="5"/><text x="81.8289%" y="943.50">_RN..</text></g><g><title>_RNvNtCs4w1JTnt65Mk_10cargo_util2du2du (5 samples, 3.29%)</title><rect x="81.5789%" y="917" width="3.2895%" height="15" fill="rgb(248,123,6)" fg:x="124" fg:w="5"/><text x="81.8289%" y="927.50">_RN..</text></g><g><title>_RNvMsc_NtCsfs255iBgrWr_6ignore4walkNtB5_12WalkParallel5visit (5 samples, 3.29%)</title><rect x="81.5789%" y="901" width="3.2895%" height="15" fill="rgb(206,91,31)" fg:x="124" fg:w="5"/><text x="81.8289%" y="911.50">_RN..</text></g><g><title>std::sys::unix::thread::Thread::join (5 samples, 3.29%)</title><rect x="81.5789%" y="885" width="3.2895%" height="15" fill="rgb(211,154,13)" fg:x="124" fg:w="5"/><text x="81.8289%" y="895.50">std..</text></g><g><title>[libc.so.6] (5 samples, 3.29%)</title><rect x="81.5789%" y="869" width="3.2895%" height="15" fill="rgb(225,148,7)" fg:x="124" fg:w="5"/><text x="81.8289%" y="879.50">[li..</text></g><g><title>[libc.so.6] (5 samples, 3.29%)</title><rect x="81.5789%" y="853" width="3.2895%" height="15" fill="rgb(220,160,43)" fg:x="124" fg:w="5"/><text x="81.8289%" y="863.50">[li..</text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo4core8resolver18activate_deps_loop (7 samples, 4.61%)</title><rect x="80.9211%" y="1045" width="4.6053%" height="15" fill="rgb(213,52,39)" fg:x="123" fg:w="7"/><text x="81.1711%" y="1055.50">_RNvN..</text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo4core8resolver8activate (7 samples, 4.61%)</title><rect x="80.9211%" y="1029" width="4.6053%" height="15" fill="rgb(243,137,7)" fg:x="123" fg:w="7"/><text x="81.1711%" y="1039.50">_RNvN..</text></g><g><title>_RNvXNtNtCsfjSW78RKgj6_4core4iter8adaptersINtB2_12GenericShuntINtNtB2_10filter_map9FilterMapINtNtNtCsbF9Th3qYG7J_5alloc3vec9into_iter8IntoIterTNtNtNtCseEhEU3U7BfZ_5cargo4core10dependency10DependencyINtNtB1y_2rc2RcINtNtNtNtB1y_11collections5btree3set8BTreeSetNtNtNtB2m_4util9interning14InternedStringEEEENCNvMNtNtB2k_8resolver9dep_cacheNtB4V_15RegistryQueryer10build_deps0EINtNtB6_6result6ResultNtNtB6_7convert10InfallibleNtCsa09QZI2a8ZE_6anyhow5ErrorEENtNtNtB4_6traits8iterator8Iterator4nextB2m_ (6 samples, 3.95%)</title><rect x="81.5789%" y="1013" width="3.9474%" height="15" fill="rgb(230,79,13)" fg:x="124" fg:w="6"/><text x="81.8289%" y="1023.50">_RNv..</text></g><g><title>_RNvMNtNtNtCseEhEU3U7BfZ_5cargo4core8resolver9dep_cacheNtB2_15RegistryQueryer5query (6 samples, 3.95%)</title><rect x="81.5789%" y="997" width="3.9474%" height="15" fill="rgb(247,105,23)" fg:x="124" fg:w="6"/><text x="81.8289%" y="1007.50">_RNv..</text></g><g><title>_RNvXs_NtNtCseEhEU3U7BfZ_5cargo4core8registryNtB4_15PackageRegistryNtB4_8Registry5query (6 samples, 3.95%)</title><rect x="81.5789%" y="981" width="3.9474%" height="15" fill="rgb(223,179,41)" fg:x="124" fg:w="6"/><text x="81.8289%" y="991.50">_RNv..</text></g><g><title>_RNvXs_NtNtCseEhEU3U7BfZ_5cargo7sources8replacedNtB4_14ReplacedSourceNtNtB6_6source6Source5query (1 samples, 0.66%)</title><rect x="84.8684%" y="965" width="0.6579%" height="15" fill="rgb(218,9,34)" fg:x="129" fg:w="1"/><text x="85.1184%" y="975.50"></text></g><g><title>_RNvXs_NtNtCseEhEU3U7BfZ_5cargo7sources8registryNtB4_14RegistrySourceNtNtB6_6source6Source5query (1 samples, 0.66%)</title><rect x="84.8684%" y="949" width="0.6579%" height="15" fill="rgb(222,106,8)" fg:x="129" fg:w="1"/><text x="85.1184%" y="959.50"></text></g><g><title>_RNvMs_NtNtNtCseEhEU3U7BfZ_5cargo7sources8registry5indexNtB4_13RegistryIndex23query_inner_with_online (1 samples, 0.66%)</title><rect x="84.8684%" y="933" width="0.6579%" height="15" fill="rgb(211,220,0)" fg:x="129" fg:w="1"/><text x="85.1184%" y="943.50"></text></g><g><title>_RNvMs_NtNtNtCseEhEU3U7BfZ_5cargo7sources8registry5indexNtB4_13RegistryIndex9summaries (1 samples, 0.66%)</title><rect x="84.8684%" y="917" width="0.6579%" height="15" fill="rgb(229,52,16)" fg:x="129" fg:w="1"/><text x="85.1184%" y="927.50"></text></g><g><title>_RNvMs1_NtCse7z0NyktTFx_9hashbrown3mapINtB5_7HashMapNtCs5UOc0VNYAi4_6semver7VersionNtNtNtNtCseEhEU3U7BfZ_5cargo7sources8registry5index17MaybeIndexSummaryNtNtNtCsfC4zgGc0p15_3std4hash6random11RandomStateE6insertB1q_ (1 samples, 0.66%)</title><rect x="84.8684%" y="901" width="0.6579%" height="15" fill="rgb(212,155,18)" fg:x="129" fg:w="1"/><text x="85.1184%" y="911.50"></text></g><g><title>_RINvMs6_NtCse7z0NyktTFx_9hashbrown3rawINtB6_8RawTableTNtCs5UOc0VNYAi4_6semver7VersionNtNtNtNtCseEhEU3U7BfZ_5cargo7sources8registry5index17MaybeIndexSummaryEE14reserve_rehashNCINvNtB8_3map11make_hasherBQ_B1l_NtNtNtCsfC4zgGc0p15_3std4hash6random11RandomStateE0EB1t_ (1 samples, 0.66%)</title><rect x="84.8684%" y="885" width="0.6579%" height="15" fill="rgb(242,21,14)" fg:x="129" fg:w="1"/><text x="85.1184%" y="895.50"></text></g><g><title>_RINvYNtNtNtCsfC4zgGc0p15_3std4hash6random11RandomStateNtNtCsfjSW78RKgj6_4core4hash11BuildHasher8hash_oneRNtCs5UOc0VNYAi4_6semver7VersionECseEhEU3U7BfZ_5cargo (1 samples, 0.66%)</title><rect x="84.8684%" y="869" width="0.6579%" height="15" fill="rgb(222,19,48)" fg:x="129" fg:w="1"/><text x="85.1184%" y="879.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo4core8resolver7resolve (1 samples, 0.66%)</title><rect x="85.5263%" y="1045" width="0.6579%" height="15" fill="rgb(232,45,27)" fg:x="130" fg:w="1"/><text x="85.7763%" y="1055.50"></text></g><g><title>_RNvMNtNtCseEhEU3U7BfZ_5cargo4util5graphINtB2_5GraphNtNtNtB6_4core10package_id9PackageIdINtNtNtNtCsfC4zgGc0p15_3std11collections4hash3set7HashSetNtNtBR_10dependency10DependencyEE4linkB6_ (1 samples, 0.66%)</title><rect x="85.5263%" y="1029" width="0.6579%" height="15" fill="rgb(249,103,42)" fg:x="130" fg:w="1"/><text x="85.7763%" y="1039.50"></text></g><g><title>_RINvMs2_NtNtCs9nmaJ9hxube_5im_rc3ord3mapINtB6_6OrdMapNtNtNtCseEhEU3U7BfZ_5cargo4core10package_id9PackageIdINtNtNtNtCsfC4zgGc0p15_3std11collections4hash3set7HashSetNtNtBT_10dependency10DependencyEE7get_mutBP_EBV_ (1 samples, 0.66%)</title><rect x="85.5263%" y="1013" width="0.6579%" height="15" fill="rgb(246,81,33)" fg:x="130" fg:w="1"/><text x="85.7763%" y="1023.50"></text></g><g><title>_RINvXs_NtNtCs9nmaJ9hxube_5im_rc3ord3mapTNtNtNtCseEhEU3U7BfZ_5cargo4core10package_id9PackageIdINtNtNtNtCsfC4zgGc0p15_3std11collections4hash3set7HashSetNtNtBG_10dependency10DependencyEENtNtNtB9_5nodes5btree10BTreeValue10search_keyBC_EBI_ (1 samples, 0.66%)</title><rect x="85.5263%" y="997" width="0.6579%" height="15" fill="rgb(252,33,42)" fg:x="130" fg:w="1"/><text x="85.7763%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="85.5263%" y="981" width="0.6579%" height="15" fill="rgb(209,212,41)" fg:x="130" fg:w="1"/><text x="85.7763%" y="991.50"></text></g><g><title>_RNvMNtNtCseEhEU3U7BfZ_5cargo4core8registryNtB2_15PackageRegistry13ensure_loaded (1 samples, 0.66%)</title><rect x="86.1842%" y="981" width="0.6579%" height="15" fill="rgb(207,154,6)" fg:x="131" fg:w="1"/><text x="86.4342%" y="991.50"></text></g><g><title>_RNvXs_NtNtCseEhEU3U7BfZ_5cargo4core8registryNtB4_15PackageRegistryNtB4_8Registry17block_until_ready (1 samples, 0.66%)</title><rect x="86.1842%" y="965" width="0.6579%" height="15" fill="rgb(223,64,47)" fg:x="131" fg:w="1"/><text x="86.4342%" y="975.50"></text></g><g><title>_RNvXs0_NtNtNtCseEhEU3U7BfZ_5cargo7sources3git6sourceNtB5_9GitSourceNtNtB9_6source6Source17block_until_ready (1 samples, 0.66%)</title><rect x="86.1842%" y="949" width="0.6579%" height="15" fill="rgb(211,161,38)" fg:x="131" fg:w="1"/><text x="86.4342%" y="959.50"></text></g><g><title>_RNvMs0_NtNtNtCseEhEU3U7BfZ_5cargo7sources3git5utilsNtB5_11GitDatabase7copy_to (1 samples, 0.66%)</title><rect x="86.1842%" y="933" width="0.6579%" height="15" fill="rgb(219,138,40)" fg:x="131" fg:w="1"/><text x="86.4342%" y="943.50"></text></g><g><title>_RNvNvMs2_NtNtNtCseEhEU3U7BfZ_5cargo7sources3git5utilsNtB7_11GitCheckout17update_submodules17update_submodules (1 samples, 0.66%)</title><rect x="86.1842%" y="917" width="0.6579%" height="15" fill="rgb(241,228,46)" fg:x="131" fg:w="1"/><text x="86.4342%" y="927.50"></text></g><g><title>_RNvMs_NtCseqMLPJdy5Gd_4git24repoNtB4_10Repository10submodules (1 samples, 0.66%)</title><rect x="86.1842%" y="901" width="0.6579%" height="15" fill="rgb(223,209,38)" fg:x="131" fg:w="1"/><text x="86.4342%" y="911.50"></text></g><g><title>git_submodule_foreach (1 samples, 0.66%)</title><rect x="86.1842%" y="885" width="0.6579%" height="15" fill="rgb(236,164,45)" fg:x="131" fg:w="1"/><text x="86.4342%" y="895.50"></text></g><g><title>git_submodule__map (1 samples, 0.66%)</title><rect x="86.1842%" y="869" width="0.6579%" height="15" fill="rgb(231,15,5)" fg:x="131" fg:w="1"/><text x="86.4342%" y="879.50"></text></g><g><title>git_repository_index (1 samples, 0.66%)</title><rect x="86.1842%" y="853" width="0.6579%" height="15" fill="rgb(252,35,15)" fg:x="131" fg:w="1"/><text x="86.4342%" y="863.50"></text></g><g><title>git_repository_index__weakptr (1 samples, 0.66%)</title><rect x="86.1842%" y="837" width="0.6579%" height="15" fill="rgb(248,181,18)" fg:x="131" fg:w="1"/><text x="86.4342%" y="847.50"></text></g><g><title>git_index__open (1 samples, 0.66%)</title><rect x="86.1842%" y="821" width="0.6579%" height="15" fill="rgb(233,39,42)" fg:x="131" fg:w="1"/><text x="86.4342%" y="831.50"></text></g><g><title>git_index_read (1 samples, 0.66%)</title><rect x="86.1842%" y="805" width="0.6579%" height="15" fill="rgb(238,110,33)" fg:x="131" fg:w="1"/><text x="86.4342%" y="815.50"></text></g><g><title>index_entry_create (1 samples, 0.66%)</title><rect x="86.1842%" y="789" width="0.6579%" height="15" fill="rgb(233,195,10)" fg:x="131" fg:w="1"/><text x="86.4342%" y="799.50"></text></g><g><title>git_path_str_is_valid (1 samples, 0.66%)</title><rect x="86.1842%" y="773" width="0.6579%" height="15" fill="rgb(254,105,3)" fg:x="131" fg:w="1"/><text x="86.4342%" y="783.50"></text></g><g><title>git_fs_path_str_is_valid_ext (1 samples, 0.66%)</title><rect x="86.1842%" y="757" width="0.6579%" height="15" fill="rgb(221,225,9)" fg:x="131" fg:w="1"/><text x="86.4342%" y="767.50"></text></g><g><title>validate_repo_component (1 samples, 0.66%)</title><rect x="86.1842%" y="741" width="0.6579%" height="15" fill="rgb(224,227,45)" fg:x="131" fg:w="1"/><text x="86.4342%" y="751.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo4core8resolver8activate (2 samples, 1.32%)</title><rect x="86.1842%" y="1045" width="1.3158%" height="15" fill="rgb(229,198,43)" fg:x="131" fg:w="2"/><text x="86.4342%" y="1055.50"></text></g><g><title>_RNvXNtNtCsfjSW78RKgj6_4core4iter8adaptersINtB2_12GenericShuntINtNtB2_10filter_map9FilterMapINtNtNtCsbF9Th3qYG7J_5alloc3vec9into_iter8IntoIterTNtNtNtCseEhEU3U7BfZ_5cargo4core10dependency10DependencyINtNtB1y_2rc2RcINtNtNtNtB1y_11collections5btree3set8BTreeSetNtNtNtB2m_4util9interning14InternedStringEEEENCNvMNtNtB2k_8resolver9dep_cacheNtB4V_15RegistryQueryer10build_deps0EINtNtB6_6result6ResultNtNtB6_7convert10InfallibleNtCsa09QZI2a8ZE_6anyhow5ErrorEENtNtNtB4_6traits8iterator8Iterator4nextB2m_ (2 samples, 1.32%)</title><rect x="86.1842%" y="1029" width="1.3158%" height="15" fill="rgb(206,209,35)" fg:x="131" fg:w="2"/><text x="86.4342%" y="1039.50"></text></g><g><title>_RNvMNtNtNtCseEhEU3U7BfZ_5cargo4core8resolver9dep_cacheNtB2_15RegistryQueryer5query (2 samples, 1.32%)</title><rect x="86.1842%" y="1013" width="1.3158%" height="15" fill="rgb(245,195,53)" fg:x="131" fg:w="2"/><text x="86.4342%" y="1023.50"></text></g><g><title>_RNvXs_NtNtCseEhEU3U7BfZ_5cargo4core8registryNtB4_15PackageRegistryNtB4_8Registry5query (2 samples, 1.32%)</title><rect x="86.1842%" y="997" width="1.3158%" height="15" fill="rgb(240,92,26)" fg:x="131" fg:w="2"/><text x="86.4342%" y="1007.50"></text></g><g><title>_RNvXs_NtNtCseEhEU3U7BfZ_5cargo7sources8replacedNtB4_14ReplacedSourceNtNtB6_6source6Source5query (1 samples, 0.66%)</title><rect x="86.8421%" y="981" width="0.6579%" height="15" fill="rgb(207,40,23)" fg:x="132" fg:w="1"/><text x="87.0921%" y="991.50"></text></g><g><title>_RNvXs_NtNtCseEhEU3U7BfZ_5cargo7sources8registryNtB4_14RegistrySourceNtNtB6_6source6Source5query (1 samples, 0.66%)</title><rect x="86.8421%" y="965" width="0.6579%" height="15" fill="rgb(223,111,35)" fg:x="132" fg:w="1"/><text x="87.0921%" y="975.50"></text></g><g><title>_RNvMs_NtNtNtCseEhEU3U7BfZ_5cargo7sources8registry5indexNtB4_13RegistryIndex23query_inner_with_online (1 samples, 0.66%)</title><rect x="86.8421%" y="949" width="0.6579%" height="15" fill="rgb(229,147,28)" fg:x="132" fg:w="1"/><text x="87.0921%" y="959.50"></text></g><g><title>_RNCNvMs_NtNtNtCseEhEU3U7BfZ_5cargo7sources8registry5indexNtB6_13RegistryIndex9summariess_0Bc_ (1 samples, 0.66%)</title><rect x="86.8421%" y="933" width="0.6579%" height="15" fill="rgb(211,29,28)" fg:x="132" fg:w="1"/><text x="87.0921%" y="943.50"></text></g><g><title>_RNvMs4_NtNtNtCseEhEU3U7BfZ_5cargo7sources8registry5indexNtB5_12IndexSummary5parse (1 samples, 0.66%)</title><rect x="86.8421%" y="917" width="0.6579%" height="15" fill="rgb(228,72,33)" fg:x="132" fg:w="1"/><text x="87.0921%" y="927.50"></text></g><g><title>_RINvXNvNtNtNtCseEhEU3U7BfZ_5cargo7sources8registry5index1__NtB5_12IndexPackageNtNtCs93zYQH5Vhu0_5serde2de11Deserialize11deserializeQINtNtCsqA2ERIVgZW_10serde_json2de12DeserializerNtNtB2b_4read9SliceReadEEBb_ (1 samples, 0.66%)</title><rect x="86.8421%" y="901" width="0.6579%" height="15" fill="rgb(205,214,31)" fg:x="132" fg:w="1"/><text x="87.0921%" y="911.50"></text></g><g><title>_RINvXs3_NtCs93zYQH5Vhu0_5serde2deINtNtCsfjSW78RKgj6_4core6marker11PhantomDataINtNtCsbF9Th3qYG7J_5alloc3vec3VecNtNtNtNtCseEhEU3U7BfZ_5cargo7sources8registry5index18RegistryDependencyEENtB6_15DeserializeSeed11deserializeQINtNtCsqA2ERIVgZW_10serde_json2de12DeserializerNtNtB3A_4read9SliceReadEEB1S_ (1 samples, 0.66%)</title><rect x="86.8421%" y="885" width="0.6579%" height="15" fill="rgb(224,111,15)" fg:x="132" fg:w="1"/><text x="87.0921%" y="895.50"></text></g><g><title>_RINvXsh_NtNtCseEhEU3U7BfZ_5cargo4util9interningNtB6_14InternedStringNtNtCs93zYQH5Vhu0_5serde2de11Deserialize11deserializeQINtNtCsqA2ERIVgZW_10serde_json2de12DeserializerNtNtB21_4read9SliceReadEEBa_ (1 samples, 0.66%)</title><rect x="86.8421%" y="869" width="0.6579%" height="15" fill="rgb(253,21,26)" fg:x="132" fg:w="1"/><text x="87.0921%" y="879.50"></text></g><g><title>malloc (1 samples, 0.66%)</title><rect x="86.8421%" y="853" width="0.6579%" height="15" fill="rgb(245,139,43)" fg:x="132" fg:w="1"/><text x="87.0921%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="86.8421%" y="837" width="0.6579%" height="15" fill="rgb(252,170,7)" fg:x="132" fg:w="1"/><text x="87.0921%" y="847.50"></text></g><g><title>_RINvXsb_Cs5A4PmhQ8HUp_13serde_ignoredINtB6_11TrackedSeedINtNtCsfjSW78RKgj6_4core6marker11PhantomDataINtNtBX_6option6OptionINtNtNtNtCsbF9Th3qYG7J_5alloc11collections5btree3map8BTreeMapNtNtB25_6string6StringINtNtB25_3vec3VecB2V_EEEENCNvNtNtCseEhEU3U7BfZ_5cargo4util4toml22read_manifest_from_str0ENtNtCs93zYQH5Vhu0_5serde2de15DeserializeSeed11deserializeNtNtNtCsew3jru5kHPb_9toml_edit2de5value17ValueDeserializerEB3O_ (1 samples, 0.66%)</title><rect x="87.5000%" y="1013" width="0.6579%" height="15" fill="rgb(231,118,14)" fg:x="133" fg:w="1"/><text x="87.7500%" y="1023.50"></text></g><g><title>_RINvXNtNtCsew3jru5kHPb_9toml_edit2de5tableNtB3_17TableDeserializerNtNtCs93zYQH5Vhu0_5serde2de12Deserializer15deserialize_anyINtCs5A4PmhQ8HUp_13serde_ignored4WrapINtNvXs31_NtB14_5implsINtNtNtNtCsbF9Th3qYG7J_5alloc11collections5btree3map8BTreeMapppENtB14_11Deserialize11deserialize10MapVisitorNtNtB34_6string6StringINtNtB34_3vec3VecB4F_EENCNvNtNtCseEhEU3U7BfZ_5cargo4util4toml22read_manifest_from_str0EEB5w_ (1 samples, 0.66%)</title><rect x="87.5000%" y="997" width="0.6579%" height="15" fill="rgb(238,83,0)" fg:x="133" fg:w="1"/><text x="87.7500%" y="1007.50"></text></g><g><title>_RNvMsi_NtNtNtCsbF9Th3qYG7J_5alloc11collections5btree3mapINtB5_8BTreeMapNtNtBb_6string6StringINtNtBb_3vec3VecB17_EE6insertCseEhEU3U7BfZ_5cargo (1 samples, 0.66%)</title><rect x="87.5000%" y="981" width="0.6579%" height="15" fill="rgb(221,39,39)" fg:x="133" fg:w="1"/><text x="87.7500%" y="991.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="87.5000%" y="965" width="0.6579%" height="15" fill="rgb(222,119,46)" fg:x="133" fg:w="1"/><text x="87.7500%" y="975.50"></text></g><g><title>_RINvXsb_Cs5A4PmhQ8HUp_13serde_ignoredINtB6_11TrackedSeedINtNtCsfjSW78RKgj6_4core6marker11PhantomDataINtNtBX_6option6OptionINtNtNtNtCseEhEU3U7BfZ_5cargo4util4toml6schema16InheritableFieldNtNtB23_10semver_ext11RustVersionEEENCNvB21_22read_manifest_from_str0ENtNtCs93zYQH5Vhu0_5serde2de15DeserializeSeed11deserializeNtNtNtCsew3jru5kHPb_9toml_edit2de5value17ValueDeserializerEB25_ (1 samples, 0.66%)</title><rect x="88.1579%" y="965" width="0.6579%" height="15" fill="rgb(222,165,49)" fg:x="134" fg:w="1"/><text x="88.4079%" y="975.50"></text></g><g><title>_RNvXs2_NtNtCseEhEU3U7BfZ_5cargo4util10semver_extNtB5_11RustVersionNtNtNtCsfjSW78RKgj6_4core3str6traits7FromStr8from_str (1 samples, 0.66%)</title><rect x="88.1579%" y="949" width="0.6579%" height="15" fill="rgb(219,113,52)" fg:x="134" fg:w="1"/><text x="88.4079%" y="959.50"></text></g><g><title>_RNvXs1_NtCseEhEU3U7BfZ_5cargo11util_semverNtB5_14PartialVersionNtNtNtCsfjSW78RKgj6_4core3str6traits7FromStr8from_str (1 samples, 0.66%)</title><rect x="88.1579%" y="933" width="0.6579%" height="15" fill="rgb(214,7,15)" fg:x="134" fg:w="1"/><text x="88.4079%" y="943.50"></text></g><g><title>_RINvXs0_NvXNvNtNtNtCseEhEU3U7BfZ_5cargo4util4toml6schema1__NtBb_12TomlManifestNtNtCs93zYQH5Vhu0_5serde2de11Deserialize11deserializeNtB6_9___VisitorNtB1g_7Visitor9visit_mapINtCs5A4PmhQ8HUp_13serde_ignored9MapAccessNtNtNtCsew3jru5kHPb_9toml_edit2de5table14TableMapAccessNCNvBd_22read_manifest_from_str0EEBh_ (3 samples, 1.97%)</title><rect x="87.5000%" y="1029" width="1.9737%" height="15" fill="rgb(235,32,4)" fg:x="133" fg:w="3"/><text x="87.7500%" y="1039.50">_..</text></g><g><title>_RINvYINtCs5A4PmhQ8HUp_13serde_ignored9MapAccessNtNtNtCsew3jru5kHPb_9toml_edit2de5table14TableMapAccessNCNvNtNtCseEhEU3U7BfZ_5cargo4util4toml22read_manifest_from_str0ENtNtCs93zYQH5Vhu0_5serde2de9MapAccess10next_valueINtNtCsfjSW78RKgj6_4core6option6OptionINtNtCsbF9Th3qYG7J_5alloc5boxed3BoxNtNtB1G_6schema11TomlPackageEEEB1K_ (2 samples, 1.32%)</title><rect x="88.1579%" y="1013" width="1.3158%" height="15" fill="rgb(238,90,54)" fg:x="134" fg:w="2"/><text x="88.4079%" y="1023.50"></text></g><g><title>_RINvXsb_Cs5A4PmhQ8HUp_13serde_ignoredINtB6_11TrackedSeedINtNtCsfjSW78RKgj6_4core6marker11PhantomDataINtNtBX_6option6OptionINtNtCsbF9Th3qYG7J_5alloc5boxed3BoxNtNtNtNtCseEhEU3U7BfZ_5cargo4util4toml6schema11TomlPackageEEENCNvB2z_22read_manifest_from_str0ENtNtCs93zYQH5Vhu0_5serde2de15DeserializeSeed11deserializeNtNtNtCsew3jru5kHPb_9toml_edit2de5value17ValueDeserializerEB2D_ (2 samples, 1.32%)</title><rect x="88.1579%" y="997" width="1.3158%" height="15" fill="rgb(213,208,19)" fg:x="134" fg:w="2"/><text x="88.4079%" y="1007.50"></text></g><g><title>_RINvXs0_NvXNvNtNtNtCseEhEU3U7BfZ_5cargo4util4toml6schemas4_1__NtBb_11TomlPackageNtNtCs93zYQH5Vhu0_5serde2de11Deserialize11deserializeNtB6_9___VisitorNtB1i_7Visitor9visit_mapINtCs5A4PmhQ8HUp_13serde_ignored9MapAccessNtNtNtCsew3jru5kHPb_9toml_edit2de5table14TableMapAccessNCNvBd_22read_manifest_from_str0EEBh_ (2 samples, 1.32%)</title><rect x="88.1579%" y="981" width="1.3158%" height="15" fill="rgb(233,156,4)" fg:x="134" fg:w="2"/><text x="88.4079%" y="991.50"></text></g><g><title>_RINvYINtCs5A4PmhQ8HUp_13serde_ignored9MapAccessNtNtNtCsew3jru5kHPb_9toml_edit2de5table14TableMapAccessNCNvNtNtCseEhEU3U7BfZ_5cargo4util4toml22read_manifest_from_str0ENtNtCs93zYQH5Vhu0_5serde2de9MapAccess10next_valueINtNtCsfjSW78RKgj6_4core6option6OptionINtNtB1G_6schema16InheritableFieldNtNtCsbF9Th3qYG7J_5alloc6string6StringEEEB1K_ (1 samples, 0.66%)</title><rect x="88.8158%" y="965" width="0.6579%" height="15" fill="rgb(207,194,5)" fg:x="135" fg:w="1"/><text x="89.0658%" y="975.50"></text></g><g><title>_RINvXsb_Cs5A4PmhQ8HUp_13serde_ignoredINtB6_11TrackedSeedINtNtCsfjSW78RKgj6_4core6marker11PhantomDataINtNtBX_6option6OptionINtNtNtNtCseEhEU3U7BfZ_5cargo4util4toml6schema16InheritableFieldNtNtCsbF9Th3qYG7J_5alloc6string6StringEEENCNvB21_22read_manifest_from_str0ENtNtCs93zYQH5Vhu0_5serde2de15DeserializeSeed11deserializeNtNtNtCsew3jru5kHPb_9toml_edit2de5value17ValueDeserializerEB25_ (1 samples, 0.66%)</title><rect x="88.8158%" y="949" width="0.6579%" height="15" fill="rgb(206,111,30)" fg:x="135" fg:w="1"/><text x="89.0658%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="88.8158%" y="933" width="0.6579%" height="15" fill="rgb(243,70,54)" fg:x="135" fg:w="1"/><text x="89.0658%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.66%)</title><rect x="89.4737%" y="1013" width="0.6579%" height="15" fill="rgb(242,28,8)" fg:x="136" fg:w="1"/><text x="89.7237%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.66%)</title><rect x="89.4737%" y="997" width="0.6579%" height="15" fill="rgb(219,106,18)" fg:x="136" fg:w="1"/><text x="89.7237%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.66%)</title><rect x="89.4737%" y="981" width="0.6579%" height="15" fill="rgb(244,222,10)" fg:x="136" fg:w="1"/><text x="89.7237%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.66%)</title><rect x="89.4737%" y="965" width="0.6579%" height="15" fill="rgb(236,179,52)" fg:x="136" fg:w="1"/><text x="89.7237%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.66%)</title><rect x="89.4737%" y="949" width="0.6579%" height="15" fill="rgb(213,23,39)" fg:x="136" fg:w="1"/><text x="89.7237%" y="959.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.66%)</title><rect x="89.4737%" y="933" width="0.6579%" height="15" fill="rgb(238,48,10)" fg:x="136" fg:w="1"/><text x="89.7237%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.66%)</title><rect x="89.4737%" y="917" width="0.6579%" height="15" fill="rgb(251,196,23)" fg:x="136" fg:w="1"/><text x="89.7237%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="89.4737%" y="901" width="0.6579%" height="15" fill="rgb(250,152,24)" fg:x="136" fg:w="1"/><text x="89.7237%" y="911.50"></text></g><g><title>_RINvMNtNtCseEhEU3U7BfZ_5cargo4core7summaryNtB3_7Summary3newReEB7_ (1 samples, 0.66%)</title><rect x="90.1316%" y="1013" width="0.6579%" height="15" fill="rgb(209,150,17)" fg:x="137" fg:w="1"/><text x="90.3816%" y="1023.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo4core7summary17build_feature_map (1 samples, 0.66%)</title><rect x="90.1316%" y="997" width="0.6579%" height="15" fill="rgb(234,202,34)" fg:x="137" fg:w="1"/><text x="90.3816%" y="1007.50"></text></g><g><title>_RINvNvXs0_NtNtNtCsbF9Th3qYG7J_5alloc11collections5btree3mapINtB8_8BTreeMappppENtNtCsfjSW78RKgj6_4core5clone5Clone5clone13clone_subtreeNtNtBe_6string6StringINtNtBe_3vec3VecB28_ENtNtBe_5alloc6GlobalECseEhEU3U7BfZ_5cargo (1 samples, 0.66%)</title><rect x="90.7895%" y="1013" width="0.6579%" height="15" fill="rgb(253,148,53)" fg:x="138" fg:w="1"/><text x="91.0395%" y="1023.50"></text></g><g><title>_RINvNvXs0_NtNtNtCsbF9Th3qYG7J_5alloc11collections5btree3mapINtB8_8BTreeMappppENtNtCsfjSW78RKgj6_4core5clone5Clone5clone13clone_subtreeNtNtBe_6string6StringINtNtBe_3vec3VecB28_ENtNtBe_5alloc6GlobalECseEhEU3U7BfZ_5cargo (1 samples, 0.66%)</title><rect x="90.7895%" y="997" width="0.6579%" height="15" fill="rgb(218,129,16)" fg:x="138" fg:w="1"/><text x="91.0395%" y="1007.50"></text></g><g><title>_RNvXs8_NtCsbF9Th3qYG7J_5alloc3vecINtB5_3VecNtNtB7_6string6StringENtNtCsfjSW78RKgj6_4core5clone5Clone5cloneCseEhEU3U7BfZ_5cargo (1 samples, 0.66%)</title><rect x="90.7895%" y="981" width="0.6579%" height="15" fill="rgb(216,85,19)" fg:x="138" fg:w="1"/><text x="91.0395%" y="991.50"></text></g><g><title>malloc (1 samples, 0.66%)</title><rect x="90.7895%" y="965" width="0.6579%" height="15" fill="rgb(235,228,7)" fg:x="138" fg:w="1"/><text x="91.0395%" y="975.50"></text></g><g><title>_RNvNtNtNtCseEhEU3U7BfZ_5cargo4util4toml7targets7targets (1 samples, 0.66%)</title><rect x="91.4474%" y="1013" width="0.6579%" height="15" fill="rgb(245,175,0)" fg:x="139" fg:w="1"/><text x="91.6974%" y="1023.50"></text></g><g><title>cfree (1 samples, 0.66%)</title><rect x="91.4474%" y="997" width="0.6579%" height="15" fill="rgb(208,168,36)" fg:x="139" fg:w="1"/><text x="91.6974%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="91.4474%" y="981" width="0.6579%" height="15" fill="rgb(246,171,24)" fg:x="139" fg:w="1"/><text x="91.6974%" y="991.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="91.4474%" y="965" width="0.6579%" height="15" fill="rgb(215,142,24)" fg:x="139" fg:w="1"/><text x="91.6974%" y="975.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="91.4474%" y="949" width="0.6579%" height="15" fill="rgb(250,187,7)" fg:x="139" fg:w="1"/><text x="91.6974%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="91.4474%" y="933" width="0.6579%" height="15" fill="rgb(228,66,33)" fg:x="139" fg:w="1"/><text x="91.6974%" y="943.50"></text></g><g><title>_RNvNvMNtNtCseEhEU3U7BfZ_5cargo4util4tomlNtNtB4_6schema12TomlManifest16to_real_manifest20process_dependencies (1 samples, 0.66%)</title><rect x="92.1053%" y="1013" width="0.6579%" height="15" fill="rgb(234,215,21)" fg:x="140" fg:w="1"/><text x="92.3553%" y="1023.50"></text></g><g><title>_RNvMsi_NtNtNtCsbF9Th3qYG7J_5alloc11collections5btree3mapINtB5_8BTreeMapNtNtBb_6string6StringNtNtNtNtCseEhEU3U7BfZ_5cargo4util4toml6schema21InheritableDependencyE6insertB1A_ (1 samples, 0.66%)</title><rect x="92.1053%" y="997" width="0.6579%" height="15" fill="rgb(222,191,20)" fg:x="140" fg:w="1"/><text x="92.3553%" y="1007.50"></text></g><g><title>malloc (1 samples, 0.66%)</title><rect x="92.1053%" y="981" width="0.6579%" height="15" fill="rgb(245,79,54)" fg:x="140" fg:w="1"/><text x="92.3553%" y="991.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="92.1053%" y="965" width="0.6579%" height="15" fill="rgb(240,10,37)" fg:x="140" fg:w="1"/><text x="92.3553%" y="975.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="92.1053%" y="949" width="0.6579%" height="15" fill="rgb(214,192,32)" fg:x="140" fg:w="1"/><text x="92.3553%" y="959.50"></text></g><g><title>_RNvMNtNtCseEhEU3U7BfZ_5cargo4util4tomlNtNtB2_6schema12TomlManifest16to_real_manifest (6 samples, 3.95%)</title><rect x="89.4737%" y="1029" width="3.9474%" height="15" fill="rgb(209,36,54)" fg:x="136" fg:w="6"/><text x="89.7237%" y="1039.50">_RNv..</text></g><g><title>_RNvXs8_NtCsbF9Th3qYG7J_5alloc3vecINtB5_3VecNtNtB7_6string6StringENtNtCsfjSW78RKgj6_4core5clone5Clone5cloneCseEhEU3U7BfZ_5cargo (1 samples, 0.66%)</title><rect x="92.7632%" y="1013" width="0.6579%" height="15" fill="rgb(220,10,11)" fg:x="141" fg:w="1"/><text x="93.0132%" y="1023.50"></text></g><g><title>malloc (1 samples, 0.66%)</title><rect x="92.7632%" y="997" width="0.6579%" height="15" fill="rgb(221,106,17)" fg:x="141" fg:w="1"/><text x="93.0132%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="92.7632%" y="981" width="0.6579%" height="15" fill="rgb(251,142,44)" fg:x="141" fg:w="1"/><text x="93.0132%" y="991.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="92.7632%" y="965" width="0.6579%" height="15" fill="rgb(238,13,15)" fg:x="141" fg:w="1"/><text x="93.0132%" y="975.50"></text></g><g><title>_RNvMNtNtCsew3jru5kHPb_9toml_edit6parser5stateNtB2_10ParseState13on_std_header (1 samples, 0.66%)</title><rect x="93.4211%" y="981" width="0.6579%" height="15" fill="rgb(208,107,27)" fg:x="142" fg:w="1"/><text x="93.6711%" y="991.50"></text></g><g><title>_RNvMNtNtCsew3jru5kHPb_9toml_edit6parser5stateNtB2_10ParseState14finalize_table (1 samples, 0.66%)</title><rect x="93.4211%" y="965" width="0.6579%" height="15" fill="rgb(205,136,37)" fg:x="142" fg:w="1"/><text x="93.6711%" y="975.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="93.4211%" y="949" width="0.6579%" height="15" fill="rgb(250,205,27)" fg:x="142" fg:w="1"/><text x="93.6711%" y="959.50"></text></g><g><title>_RNvMNtNtCsew3jru5kHPb_9toml_edit6parser5stateNtB2_10ParseState15on_array_header (1 samples, 0.66%)</title><rect x="94.0789%" y="981" width="0.6579%" height="15" fill="rgb(210,80,43)" fg:x="143" fg:w="1"/><text x="94.3289%" y="991.50"></text></g><g><title>_RNvMNtNtCsew3jru5kHPb_9toml_edit6parser5stateNtB2_10ParseState14finalize_table (1 samples, 0.66%)</title><rect x="94.0789%" y="965" width="0.6579%" height="15" fill="rgb(247,160,36)" fg:x="143" fg:w="1"/><text x="94.3289%" y="975.50"></text></g><g><title>_RNvMs0_NtCsew3jru5kHPb_9toml_edit5tableNtB5_5Table12entry_format (1 samples, 0.66%)</title><rect x="94.0789%" y="949" width="0.6579%" height="15" fill="rgb(234,13,49)" fg:x="143" fg:w="1"/><text x="94.3289%" y="959.50"></text></g><g><title>_RNvMs3_NtCslnIN5ceqQIZ_8indexmap3mapINtB5_8IndexMapNtNtCsew3jru5kHPb_9toml_edit15internal_string14InternalStringNtNtBR_5table13TableKeyValueE5entryBR_ (1 samples, 0.66%)</title><rect x="94.0789%" y="933" width="0.6579%" height="15" fill="rgb(234,122,0)" fg:x="143" fg:w="1"/><text x="94.3289%" y="943.50"></text></g><g><title>_RINvMs3_NtCslnIN5ceqQIZ_8indexmap3mapINtB6_8IndexMapNtNtCsew3jru5kHPb_9toml_edit15internal_string14InternalStringNtNtBS_5table13TableKeyValueE4hashBO_EBS_ (1 samples, 0.66%)</title><rect x="94.0789%" y="917" width="0.6579%" height="15" fill="rgb(207,146,38)" fg:x="143" fg:w="1"/><text x="94.3289%" y="927.50"></text></g><g><title>_RNvXs3_NtNtCsfjSW78RKgj6_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCsew3jru5kHPb_9toml_edit (1 samples, 0.66%)</title><rect x="94.0789%" y="901" width="0.6579%" height="15" fill="rgb(207,177,25)" fg:x="143" fg:w="1"/><text x="94.3289%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.66%)</title><rect x="94.7368%" y="965" width="0.6579%" height="15" fill="rgb(211,178,42)" fg:x="144" fg:w="1"/><text x="94.9868%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.66%)</title><rect x="94.7368%" y="949" width="0.6579%" height="15" fill="rgb(230,69,54)" fg:x="144" fg:w="1"/><text x="94.9868%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.66%)</title><rect x="94.7368%" y="933" width="0.6579%" height="15" fill="rgb(214,135,41)" fg:x="144" fg:w="1"/><text x="94.9868%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.66%)</title><rect x="94.7368%" y="917" width="0.6579%" height="15" fill="rgb(237,67,25)" fg:x="144" fg:w="1"/><text x="94.9868%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.66%)</title><rect x="94.7368%" y="901" width="0.6579%" height="15" fill="rgb(222,189,50)" fg:x="144" fg:w="1"/><text x="94.9868%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.66%)</title><rect x="94.7368%" y="885" width="0.6579%" height="15" fill="rgb(245,148,34)" fg:x="144" fg:w="1"/><text x="94.9868%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.66%)</title><rect x="94.7368%" y="869" width="0.6579%" height="15" fill="rgb(222,29,6)" fg:x="144" fg:w="1"/><text x="94.9868%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.66%)</title><rect x="94.7368%" y="853" width="0.6579%" height="15" fill="rgb(221,189,43)" fg:x="144" fg:w="1"/><text x="94.9868%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.66%)</title><rect x="94.7368%" y="837" width="0.6579%" height="15" fill="rgb(207,36,27)" fg:x="144" fg:w="1"/><text x="94.9868%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.66%)</title><rect x="94.7368%" y="821" width="0.6579%" height="15" fill="rgb(217,90,24)" fg:x="144" fg:w="1"/><text x="94.9868%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.66%)</title><rect x="94.7368%" y="805" width="0.6579%" height="15" fill="rgb(224,66,35)" fg:x="144" fg:w="1"/><text x="94.9868%" y="815.50"></text></g><g><title>malloc (1 samples, 0.66%)</title><rect x="94.7368%" y="789" width="0.6579%" height="15" fill="rgb(221,13,50)" fg:x="144" fg:w="1"/><text x="94.9868%" y="799.50"></text></g><g><title>_RNvMNtNtCsew3jru5kHPb_9toml_edit6parser5stateNtB2_10ParseState9on_keyval (2 samples, 1.32%)</title><rect x="94.7368%" y="981" width="1.3158%" height="15" fill="rgb(236,68,49)" fg:x="144" fg:w="2"/><text x="94.9868%" y="991.50"></text></g><g><title>_RNvMs6_NtNtCslnIN5ceqQIZ_8indexmap3map4coreINtB5_11VacantEntryNtNtCsew3jru5kHPb_9toml_edit15internal_string14InternalStringNtNtB12_5table13TableKeyValueE6insertB12_ (1 samples, 0.66%)</title><rect x="95.3947%" y="965" width="0.6579%" height="15" fill="rgb(229,146,28)" fg:x="145" fg:w="1"/><text x="95.6447%" y="975.50"></text></g><g><title>_RNvMs1_NtNtCslnIN5ceqQIZ_8indexmap3map4coreINtB5_12IndexMapCoreNtNtCsew3jru5kHPb_9toml_edit15internal_string14InternalStringNtNtB13_5table13TableKeyValueE10push_entryB13_ (1 samples, 0.66%)</title><rect x="95.3947%" y="949" width="0.6579%" height="15" fill="rgb(225,31,38)" fg:x="145" fg:w="1"/><text x="95.6447%" y="959.50"></text></g><g><title>_RNvMs1_NtNtCslnIN5ceqQIZ_8indexmap3map4coreINtB5_12IndexMapCoreNtNtCsew3jru5kHPb_9toml_edit15internal_string14InternalStringNtNtB13_5table13TableKeyValueE15reserve_entriesB13_ (1 samples, 0.66%)</title><rect x="95.3947%" y="933" width="0.6579%" height="15" fill="rgb(250,208,3)" fg:x="145" fg:w="1"/><text x="95.6447%" y="943.50"></text></g><g><title>_RINvNtCsbF9Th3qYG7J_5alloc7raw_vec11finish_growNtNtB4_5alloc6GlobalECsew3jru5kHPb_9toml_edit (1 samples, 0.66%)</title><rect x="95.3947%" y="917" width="0.6579%" height="15" fill="rgb(246,54,23)" fg:x="145" fg:w="1"/><text x="95.6447%" y="927.50"></text></g><g><title>realloc (1 samples, 0.66%)</title><rect x="95.3947%" y="901" width="0.6579%" height="15" fill="rgb(243,76,11)" fg:x="145" fg:w="1"/><text x="95.6447%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="95.3947%" y="885" width="0.6579%" height="15" fill="rgb(245,21,50)" fg:x="145" fg:w="1"/><text x="95.6447%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="95.3947%" y="869" width="0.6579%" height="15" fill="rgb(228,9,43)" fg:x="145" fg:w="1"/><text x="95.6447%" y="879.50"></text></g><g><title>_RNvNtNtCsew3jru5kHPb_9toml_edit6parser3key3key (1 samples, 0.66%)</title><rect x="96.0526%" y="981" width="0.6579%" height="15" fill="rgb(208,100,47)" fg:x="146" fg:w="1"/><text x="96.3026%" y="991.50"></text></g><g><title>_RNvXs1_NtNtCskCmgjJHPcu3_6winnow10combinator6parserINtB5_3MapTINtB5_4SpanNvNtNtCsew3jru5kHPb_9toml_edit6parser6trivia2wsINtNtB9_6stream7LocatedRNtB1X_4BStrEReNtNtB9_5error12ContextErrorENvNtB1d_3key10simple_keyBY_ENCNvB30_3key0B1U_TINtNtNtCsfjSW78RKgj6_4core3ops5range5RangejETNtNtB1f_10raw_string9RawStringNtNtB1f_15internal_string14InternalStringEB3I_ENtNtB1f_3key3KeyB2w_EINtNtB9_6parser6ParserB1U_B5G_B2w_E10parse_nextB1f_ (1 samples, 0.66%)</title><rect x="96.0526%" y="965" width="0.6579%" height="15" fill="rgb(232,26,8)" fg:x="146" fg:w="1"/><text x="96.3026%" y="975.50"></text></g><g><title>_RNvNtNtCseEhEU3U7BfZ_5cargo4util4toml13read_manifest (15 samples, 9.87%)</title><rect x="87.5000%" y="1045" width="9.8684%" height="15" fill="rgb(216,166,38)" fg:x="133" fg:w="15"/><text x="87.7500%" y="1055.50">_RNvNtNtCseEhE..</text></g><g><title>_RNvXs5_NtCsew3jru5kHPb_9toml_edit2deNtB5_12DeserializerNtNtNtCsfjSW78RKgj6_4core3str6traits7FromStr8from_str (6 samples, 3.95%)</title><rect x="93.4211%" y="1029" width="3.9474%" height="15" fill="rgb(251,202,51)" fg:x="142" fg:w="6"/><text x="93.6711%" y="1039.50">_RNv..</text></g><g><title>_RNvNtCsew3jru5kHPb_9toml_edit6parser14parse_document (6 samples, 3.95%)</title><rect x="93.4211%" y="1013" width="3.9474%" height="15" fill="rgb(254,216,34)" fg:x="142" fg:w="6"/><text x="93.6711%" y="1023.50">_RNv..</text></g><g><title>_RNCINvNtNtCskCmgjJHPcu3_6winnow10combinator5multi6repeatINtNtB8_6stream7LocatedRNtBV_4BStrETuuEuNtNtB8_5error12ContextErrorTNCNvNtNtCsew3jru5kHPb_9toml_edit6parser8document8documents0_0NCNvB22_8parse_ws0EINtNtNtCsfjSW78RKgj6_4core3ops5range9RangeFromjEE0B26_ (6 samples, 3.95%)</title><rect x="93.4211%" y="997" width="3.9474%" height="15" fill="rgb(251,32,27)" fg:x="142" fg:w="6"/><text x="93.6711%" y="1007.50">_RNC..</text></g><g><title>_RNvNtNtCsew3jru5kHPb_9toml_edit6parser8document12parse_keyval (1 samples, 0.66%)</title><rect x="96.7105%" y="981" width="0.6579%" height="15" fill="rgb(208,127,28)" fg:x="147" fg:w="1"/><text x="96.9605%" y="991.50"></text></g><g><title>[libc.so.6] (1 samples, 0.66%)</title><rect x="96.7105%" y="965" width="0.6579%" height="15" fill="rgb(224,137,22)" fg:x="147" fg:w="1"/><text x="96.9605%" y="975.50"></text></g><g><title>_RNvXs1_NtCs5UOc0VNYAi4_6semver10identifierNtB5_10IdentifierNtNtCsfjSW78RKgj6_4core3cmp9PartialEq2eq (1 samples, 0.66%)</title><rect x="97.3684%" y="1045" width="0.6579%" height="15" fill="rgb(254,70,32)" fg:x="148" fg:w="1"/><text x="97.6184%" y="1055.50"></text></g><g><title>malloc (1 samples, 0.66%)</title><rect x="98.0263%" y="1045" width="0.6579%" height="15" fill="rgb(229,75,37)" fg:x="149" fg:w="1"/><text x="98.2763%" y="1055.50"></text></g><g><title>[unknown] (45 samples, 29.61%)</title><rect x="69.7368%" y="1061" width="29.6053%" height="15" fill="rgb(252,64,23)" fg:x="106" fg:w="45"/><text x="69.9868%" y="1071.50">[unknown]</text></g><g><title>std::rt::lang_start_internal (1 samples, 0.66%)</title><rect x="98.6842%" y="1045" width="0.6579%" height="15" fill="rgb(232,162,48)" fg:x="150" fg:w="1"/><text x="98.9342%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.66%)</title><rect x="98.6842%" y="1029" width="0.6579%" height="15" fill="rgb(246,160,12)" fg:x="150" fg:w="1"/><text x="98.9342%" y="1039.50"></text></g><g><title>std::panicking::try (1 samples, 0.66%)</title><rect x="98.6842%" y="1013" width="0.6579%" height="15" fill="rgb(247,166,0)" fg:x="150" fg:w="1"/><text x="98.9342%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.66%)</title><rect x="98.6842%" y="997" width="0.6579%" height="15" fill="rgb(249,219,21)" fg:x="150" fg:w="1"/><text x="98.9342%" y="1007.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (1 samples, 0.66%)</title><rect x="98.6842%" y="981" width="0.6579%" height="15" fill="rgb(205,209,3)" fg:x="150" fg:w="1"/><text x="98.9342%" y="991.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.66%)</title><rect x="98.6842%" y="965" width="0.6579%" height="15" fill="rgb(243,44,1)" fg:x="150" fg:w="1"/><text x="98.9342%" y="975.50"></text></g><g><title>std::panicking::try (1 samples, 0.66%)</title><rect x="98.6842%" y="949" width="0.6579%" height="15" fill="rgb(206,159,16)" fg:x="150" fg:w="1"/><text x="98.9342%" y="959.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.66%)</title><rect x="98.6842%" y="933" width="0.6579%" height="15" fill="rgb(244,77,30)" fg:x="150" fg:w="1"/><text x="98.9342%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.66%)</title><rect x="98.6842%" y="917" width="0.6579%" height="15" fill="rgb(218,69,12)" fg:x="150" fg:w="1"/><text x="98.9342%" y="927.50"></text></g><g><title>_RNCINvNtCsfC4zgGc0p15_3std2rt10lang_startuE0Cs2l6RK3KDxwK_5cargo (1 samples, 0.66%)</title><rect x="98.6842%" y="901" width="0.6579%" height="15" fill="rgb(212,87,7)" fg:x="150" fg:w="1"/><text x="98.9342%" y="911.50"></text></g><g><title>_RINvNtNtCsfC4zgGc0p15_3std10sys_common9backtrace28___rust_begin_short_backtraceFEuuECs2l6RK3KDxwK_5cargo (1 samples, 0.66%)</title><rect x="98.6842%" y="885" width="0.6579%" height="15" fill="rgb(245,114,25)" fg:x="150" fg:w="1"/><text x="98.9342%" y="895.50"></text></g><g><title>_RNvCs2l6RK3KDxwK_5cargo4main (1 samples, 0.66%)</title><rect x="98.6842%" y="869" width="0.6579%" height="15" fill="rgb(210,61,42)" fg:x="150" fg:w="1"/><text x="98.9342%" y="879.50"></text></g><g><title>_RNvNtCs2l6RK3KDxwK_5cargo3cli4main (1 samples, 0.66%)</title><rect x="98.6842%" y="853" width="0.6579%" height="15" fill="rgb(211,52,33)" fg:x="150" fg:w="1"/><text x="98.9342%" y="863.50"></text></g><g><title>_RNvCs2l6RK3KDxwK_5cargo8init_git (1 samples, 0.66%)</title><rect x="98.6842%" y="837" width="0.6579%" height="15" fill="rgb(234,58,33)" fg:x="150" fg:w="1"/><text x="98.9342%" y="847.50"></text></g><g><title>_RNvNtCseqMLPJdy5Gd_4git24opts27set_verify_owner_validation (1 samples, 0.66%)</title><rect x="98.6842%" y="821" width="0.6579%" height="15" fill="rgb(220,115,36)" fg:x="150" fg:w="1"/><text x="98.9342%" y="831.50"></text></g><g><title>_RNvCskcFSbD4VACL_11libgit2_sys4init (1 samples, 0.66%)</title><rect x="98.6842%" y="805" width="0.6579%" height="15" fill="rgb(243,153,54)" fg:x="150" fg:w="1"/><text x="98.9342%" y="815.50"></text></g><g><title>_RINvMs0_NtNtNtCsfC4zgGc0p15_3std10sys_common4once5futexNtB6_4Once4callNCINvMs0_NtNtBc_4sync4onceNtB1f_4Once9call_onceNCNvCskcFSbD4VACL_11libgit2_sys4init0E0EB1V_ (1 samples, 0.66%)</title><rect x="98.6842%" y="789" width="0.6579%" height="15" fill="rgb(251,47,18)" fg:x="150" fg:w="1"/><text x="98.9342%" y="799.50"></text></g><g><title>git_runtime_init (1 samples, 0.66%)</title><rect x="98.6842%" y="773" width="0.6579%" height="15" fill="rgb(242,102,42)" fg:x="150" fg:w="1"/><text x="98.9342%" y="783.50"></text></g><g><title>git_openssl_stream_global_init (1 samples, 0.66%)</title><rect x="98.6842%" y="757" width="0.6579%" height="15" fill="rgb(234,31,38)" fg:x="150" fg:w="1"/><text x="98.9342%" y="767.50"></text></g><g><title>X509_STORE_set_default_paths (1 samples, 0.66%)</title><rect x="98.6842%" y="741" width="0.6579%" height="15" fill="rgb(221,117,51)" fg:x="150" fg:w="1"/><text x="98.9342%" y="751.50"></text></g><g><title>by_file_ctrl (1 samples, 0.66%)</title><rect x="98.6842%" y="725" width="0.6579%" height="15" fill="rgb(212,20,18)" fg:x="150" fg:w="1"/><text x="98.9342%" y="735.50"></text></g><g><title>X509_load_cert_crl_file (1 samples, 0.66%)</title><rect x="98.6842%" y="709" width="0.6579%" height="15" fill="rgb(245,133,36)" fg:x="150" fg:w="1"/><text x="98.9342%" y="719.50"></text></g><g><title>PEM_X509_INFO_read_bio (1 samples, 0.66%)</title><rect x="98.6842%" y="693" width="0.6579%" height="15" fill="rgb(212,6,19)" fg:x="150" fg:w="1"/><text x="98.9342%" y="703.50"></text></g><g><title>ASN1_item_d2i (1 samples, 0.66%)</title><rect x="98.6842%" y="677" width="0.6579%" height="15" fill="rgb(218,1,36)" fg:x="150" fg:w="1"/><text x="98.9342%" y="687.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.66%)</title><rect x="98.6842%" y="661" width="0.6579%" height="15" fill="rgb(246,84,54)" fg:x="150" fg:w="1"/><text x="98.9342%" y="671.50"></text></g><g><title>asn1_item_embed_new (1 samples, 0.66%)</title><rect x="98.6842%" y="645" width="0.6579%" height="15" fill="rgb(242,110,6)" fg:x="150" fg:w="1"/><text x="98.9342%" y="655.50"></text></g><g><title>x509_cb (1 samples, 0.66%)</title><rect x="98.6842%" y="629" width="0.6579%" height="15" fill="rgb(214,47,5)" fg:x="150" fg:w="1"/><text x="98.9342%" y="639.50"></text></g><g><title>all (152 samples, 100%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(218,159,25)" fg:x="0" fg:w="152"/><text x="0.2500%" y="1103.50"></text></g><g><title>cargo (57 samples, 37.50%)</title><rect x="62.5000%" y="1077" width="37.5000%" height="15" fill="rgb(215,211,28)" fg:x="95" fg:w="57"/><text x="62.7500%" y="1087.50">cargo</text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.66%)</title><rect x="99.3421%" y="1061" width="0.6579%" height="15" fill="rgb(238,59,32)" fg:x="151" fg:w="1"/><text x="99.5921%" y="1071.50"></text></g></svg></svg>